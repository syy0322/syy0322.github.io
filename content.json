{"meta":{"title":"無名小栈","subtitle":"無名小栈","description":"一个默默无闻的小网站","author":"無名","url":"https://blog.imsyy.top","root":"/"},"pages":[{"title":"","date":"2021-01-20T02:05:35.271Z","updated":"2021-01-20T02:05:35.271Z","comments":false,"path":"404.html","permalink":"https://blog.imsyy.top/404.html","excerpt":"","text":"哎呀，页面走丢了 可能是输入地址有误或该地址已被删除 回到首页"},{"title":"","date":"2021-01-16T08:07:53.322Z","updated":"2020-10-31T06:21:28.865Z","comments":true,"path":"manifest.json","permalink":"https://blog.imsyy.top/manifest.json","excerpt":"","text":"{\"name\":\"無名小栈\",\"short_name\":\"無名小栈\",\"theme_color\":\"#fff\",\"background_color\":\"#f4f4f4\",\"display\":\"standalone\",\"scope\":\"/\",\"start_url\":\"/\",\"icons\":[{\"src\":\"/medias/72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\"},{\"src\":\"/medias/192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/medias/512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"},{\"src\":\"/medias/apple-touch-icon.png\",\"sizes\":\"180x180\",\"type\":\"image/png\"}],\"splash_pages\":null}"},{"title":"","date":"2021-01-26T13:38:40.794Z","updated":"2021-01-26T13:38:40.794Z","comments":false,"path":"box/index.html","permalink":"https://blog.imsyy.top/box/index.html","excerpt":"","text":"本页面尚未完工 正在更新 const dp = new DPlayer({ container: document.getElementById('dplayer'), video: { url: 'demo.mp4', }, });"},{"title":"","date":"2021-03-04T13:41:19.867Z","updated":"2021-03-04T13:41:19.867Z","comments":false,"path":"about/index.html","permalink":"https://blog.imsyy.top/about/index.html","excerpt":"","text":"「 奈何一个人随着年龄增长，梦想便不复轻盈他开始用双手掂量生活，更看重果实而非花朵 」 叶芝 《凯尔特的薄暮》 一些瞎捣鼓出来的玩意 無名の音乐站 基于 Vue 构建的响应式在线音乐播放器 打开 GitHub 在线 Markdown 编辑器 一款基于 Vue、Vditor，为未来而构建的在线 Markdown 编辑器 打开 GitHub 在线 Markdown 编辑器 一款基于 Vue、Vditor，为未来而构建的在线 Markdown 编辑器 更新中...... .mdui-card-actions .mdui-btn { color: white; } .mdui-card-media-covered { background: rgb(0 0 0 / 70%); }"},{"title":"归档","date":"2021-02-25T02:02:11.374Z","updated":"2021-02-25T02:02:11.374Z","comments":true,"path":"archive/index.html","permalink":"https://blog.imsyy.top/archive/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2021-02-25T02:02:23.579Z","updated":"2021-02-25T02:02:23.579Z","comments":true,"path":"categories/index.html","permalink":"https://blog.imsyy.top/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-02-13T11:53:47.033Z","updated":"2021-02-13T11:53:47.033Z","comments":false,"path":"copyright/index.html","permalink":"https://blog.imsyy.top/copyright/index.html","excerpt":"","text":"CC BY-NC-SA 4.0 署名-非商业性使用-相同方式共享 4.0 国际许可协议概要 『 这是一份普通人可以理解的许可协议概要 ( 但不是替代 ) 』 您可以自由地 共享 — 在任何媒介以任何形式复制、发行本作品 演绎 — 修改、转换或以本作品为基础进行创作 只要你遵守许可协议条款，许可人就无法收回你的这些权利。 惟须遵守下列条件 署名 — 您必须给出适当的署名，提供指向本许可协议的链接，同时标明是否（对原始作品）作了修改。您可以用任何合理的方式来署名，但是不得以任何方式暗示许可人为您或您的使用背书 非商业性使用 — 您不得将本作品用于商业目的 相同方式共享 — 如果您再混合、转换或者基于本作品进行创作，您必须基于与原先许可协议相同的许可协议分发您贡献的作品 没有附加限制 — 您不得适用法律术语或者技术措施 从而限制其他人做许可协议允许的事情 声明 您不必因为公共领域的作品要素而遵守许可协议或者您的使用被可适用的例外或限制所允许 许可协议可能不会给与您意图使用的所必须的所有许可。例如，其他权利比如形象权和隐私权或人格权可能限制您如何使用作品 许可协议 查看全文"},{"title":"","date":"2021-03-01T08:48:15.575Z","updated":"2021-03-01T08:48:15.575Z","comments":true,"path":"friends/index.html","permalink":"https://blog.imsyy.top/friends/index.html","excerpt":"","text":"友 链 失落之地请此处的小伙伴们检查贵站是否能正常访问或是否违背了本站友链原则 友链页面更新 近期对友链系统进行了重做，小伙伴们可以按照下方交换友链的步骤进行填写。在新的友链系统中，您随时可以对自己的信息进行修改而无需等待博主更新 &nbsp; 添加流程&nbsp; 友链申明&nbsp; 更新友链&nbsp; 其他方式第一步：新建 Github Issue 按照格式填写并提交 12345678&#123; &quot;title&quot;: &quot;&quot;, &quot;avatar&quot;: &quot;&quot;, &quot;screenshot&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot;, &quot;description&quot;: &quot;&quot;, &quot;group&quot;: &quot;&quot;&#125;为了提高图片加载速度，建议优化头像和截图：1.打开 压缩图 上传自己的头像，将图片尺寸调整到 96px 后下载。2.将压缩后的图片上传到 sm.ms 图床 或者其它图床并使用此图片链接作为头像。3.重复上述步骤，把压缩网站截图并把尺寸调整到 540x360 以下。 第二步：添加友链并等待博主审核 请添加本站到您的友链中，如果您也使用 issue 作为友链源，只需要告知您的友链源仓库即可。123456title: 無名小栈 # 博客名avatar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;imsyy&#x2F;picture&#x2F;2020&#x2F;09&#x2F;favicon.webp # 头像链接url: https:&#x2F;&#x2F;blog.imsyy.top&#x2F; # 博客链接screenshot: https:&#x2F;&#x2F;image.thum.io&#x2F;get&#x2F;width&#x2F;1024&#x2F;crop&#x2F;768&#x2F;https:&#x2F;&#x2F;blog.imsyy.top&#x2F; # 网站截图description: 一个默默无闻的小网站 # 网站描述tags: [技术, 学习] # 标签待博主审核通过，回来刷新即可生效。◉ 站点失效、停止维护、内容不当都可能被取消友链◉ 禁止不尊重他人劳动成果，转载、引用不加出处，恶意行为的站点◉ 本站会定期检查并清理无效的、单方面的友链，如更换信息请留言，谢谢合作◉ 无效的、单方面的友链会在失落之地保留30日，如需更新信息请及时联系◉ 如果是自己创建的 Github Issue ，可以自己修改。◉ 如果是博主创建的，请自己重新创建一份，然后让博主删掉旧的。如果你不会使用 Github Issue 提交友链，那么请按照以下步骤申请友链。 第一步：按照下面格式在评论区留言 12345678&#123; &quot;title&quot;: &quot;&quot;, # 站点名字 &quot;avatar&quot;: &quot;&quot;, # 头像 &quot;screenshot&quot;: &quot;&quot;, # 站点截图 &quot;url&quot;: &quot;&quot;, # 站点地址 &quot;description&quot;: &quot;&quot;, # 描述 &quot;group&quot;: &quot;&quot; # 分组,可选值有[技术大佬、小伙伴们]&#125;为了提高图片加载速度，建议优化头像和截图：1.打开 压缩图 上传自己的头像，将图片尺寸调整到 96px 后下载。2.将压缩后的图片上传到 sm.ms 图床 或者其它图床并使用此图片链接作为头像。3.重复上述步骤，把压缩网站截图并把尺寸调整到 540x360 以下。 第二步：添加本站友链并等待博主审核 请添加本站到您的友链中（ 信息按需取 ）123456title: 無名小栈 # 博客名avatar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;imsyy&#x2F;picture&#x2F;2020&#x2F;09&#x2F;favicon.webp # 头像链接url: https:&#x2F;&#x2F;blog.imsyy.top&#x2F; # 博客链接screenshot: https:&#x2F;&#x2F;image.thum.io&#x2F;get&#x2F;width&#x2F;1024&#x2F;crop&#x2F;768&#x2F;https:&#x2F;&#x2F;blog.imsyy.top&#x2F; # 网站截图description: 一个默默无闻的小网站 # 网站描述tags: [技术, 学习] # 标签待博主核实以后，会帮您到 Github Issue 添加友链。"},{"title":"","date":"2021-03-01T03:37:19.529Z","updated":"2021-03-01T03:37:19.529Z","comments":false,"path":"history/index.html","permalink":"https://blog.imsyy.top/history/index.html","excerpt":"","text":"建 站 史 2021-02-28 全新升级了 無名の音乐站，基于 Vue 构建 同时新增一个基于 Vue 构建的 网页播放器 2021-02-12 由于 Vercel 间歇性宕机，导致站点无法访问，现已恢复 修复一些影响浏览体验的问题 2021-01-28 升级 Volantis 版本至 4.3.1 取消使用 hexo-offline-popup 插件 2021-01-16 升级 Volantis 版本至 4.3.0 2020-08-16 服务器到期，原 Typecho 站点暂时下线 2020-06-22 购入域名 imsyy.top"},{"title":"","date":"2021-01-13T05:25:54.352Z","updated":"2021-01-13T05:25:54.352Z","comments":false,"path":"game/index.html","permalink":"https://blog.imsyy.top/game/index.html","excerpt":"","text":"Game 娱乐一下 圈小猫cat 更多more"},{"title":"","date":"2021-02-13T11:42:55.646Z","updated":"2021-02-13T11:42:55.646Z","comments":true,"path":"messages/index.html","permalink":"https://blog.imsyy.top/messages/index.html","excerpt":"","text":"欢迎灌水"},{"title":"所有标签","date":"2021-02-25T02:02:58.167Z","updated":"2021-02-25T02:02:58.167Z","comments":true,"path":"tags/index.html","permalink":"https://blog.imsyy.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-03-01T08:25:57.934Z","updated":"2021-03-01T08:25:57.934Z","comments":false,"path":"music/index.html","permalink":"https://blog.imsyy.top/music/index.html","excerpt":"","text":"音 乐 付费音乐测试 歌曲和播放器加载可能需要时间，请耐心等待 var options = {\"narrow\":false,\"autoplay\":false,\"showlrc\":3,\"mode\":\"random\",\"mutex\":true,\"preload\":\"auto\",\"volume\":\"0.5\",\"listmaxheight\":\"320px\",\"music\":[{\"title\":\"Jackpot\",\"author\":\"TheFatRat\",\"url\":\"https://file.imsyy.top/music/songs/TheFatRat-Jackpot.mp3\",\"pic\":\"https://p2.music.126.net/MoyUJHTq1RcFvGy3N3Ooxg==/18596040161820969.jpg?param=130y130\",\"lrc\":\"https://file.imsyy.top/music/lrc/music.lrc\",\"theme\":\"#813D25\"},{\"title\":\"Mojito\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-Mojito.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M0000009C3rp3Kfwg0_3.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-Mojito.lrc\",\"theme\":\"#3fbce8\"},{\"title\":\"夜曲\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E5%A4%9C%E6%9B%B2.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M0000024bjiL2aocxT_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E5%A4%9C%E6%9B%B2.lrc\",\"theme\":\"#171513\"},{\"title\":\"发如雪\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E5%8F%91%E5%A6%82%E9%9B%AA.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M0000024bjiL2aocxT_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E5%8F%91%E5%A6%82%E9%9B%AA.lrc\",\"theme\":\"#171513\"},{\"title\":\"稻香\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%A8%BB%E9%A6%99.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%A8%BB%E9%A6%99.lrc\",\"theme\":\"#e3ae55\"},{\"title\":\"七里香\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E4%B8%83%E9%87%8C%E9%A6%99.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000003DFRzD192KKD_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E4%B8%83%E9%87%8C%E9%A6%99.lrc\",\"theme\":\"#395732\"},{\"title\":\"晴天\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E6%99%B4%E5%A4%A9.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E6%99%B4%E5%A4%A9.lrc\",\"theme\":\"#08362e\"},{\"title\":\"以父之名\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E4%BB%A5%E7%88%B6%E4%B9%8B%E5%90%8D.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E4%BB%A5%E7%88%B6%E4%B9%8B%E5%90%8D.lrc\",\"theme\":\"#08362e\"},{\"title\":\"本草纲目\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E6%9C%AC%E8%8D%89%E7%BA%B2%E7%9B%AE.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E6%9C%AC%E8%8D%89%E7%BA%B2%E7%9B%AE.lrc\",\"theme\":\"#171513\"},{\"title\":\"简单爱\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%AE%80%E5%8D%95%E7%88%B1.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000000I5jJB3blWeN_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%AE%80%E5%8D%95%E7%88%B1.lrc\",\"theme\":\"#c21c0f\"},{\"title\":\"青花瓷\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E9%9D%92%E8%8A%B1%E7%93%B7.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000002eFUFm2XYZ7z_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E9%9D%92%E8%8A%B1%E7%93%B7.lrc\",\"theme\":\"#000000\"},{\"title\":\"烟花易冷\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%83%9F%E8%8A%B1%E6%98%93%E5%86%B7.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000000bviBl4FjTpO_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%83%9F%E8%8A%B1%E6%98%93%E5%86%B7.lrc\",\"theme\":\"#86b5bb\"},{\"title\":\"给我一首歌的时间\",\"author\":\"周杰伦\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%BB%99%E6%88%91%E4%B8%80%E9%A6%96%E6%AD%8C%E7%9A%84%E6%97%B6%E9%97%B4.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%BB%99%E6%88%91%E4%B8%80%E9%A6%96%E6%AD%8C%E7%9A%84%E6%97%B6%E9%97%B4.lrc\",\"theme\":\"#e3ae55\"},{\"title\":\"千里之外\",\"author\":\"周杰伦 / 费玉清\",\"url\":\"https://file.imsyy.top/music/songs/%E5%91%A8%E6%9D%B0%E4%BC%A6%26%E8%B4%B9%E7%8E%89%E6%B8%85-%E5%8D%83%E9%87%8C%E4%B9%8B%E5%A4%96.mp3\",\"pic\":\"https://y.gtimg.cn/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000\",\"lrc\":\"https://file.imsyy.top/music/lrc/%E5%91%A8%E6%9D%B0%E4%BC%A6%26%E8%B4%B9%E7%8E%89%E6%B8%85-%E5%8D%83%E9%87%8C%E4%B9%8B%E5%A4%96.lrc\",\"theme\":\"#171513\"}]}; options.element = document.getElementById(\"aplayer-ouLrNYch\"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 音乐歌单测试 歌曲和播放器加载可能需要时间，请耐心等待"},{"title":"<center><b><font style=\"font-size:28px\">闲言</font></b><p><i><font color=\"#808080\" style=\"font-size:16px\">『 <span id=\"hitokoto\">欢迎</span><script src=\"https://v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script> 』</i></p></font></center>","date":"2021-02-04T13:01:29.763Z","updated":"2021-02-04T13:01:29.763Z","comments":false,"path":"talk/index.html","permalink":"https://blog.imsyy.top/talk/index.html","excerpt":"","text":""},{"title":"","date":"2021-02-25T02:04:17.491Z","updated":"2021-02-25T02:04:17.491Z","comments":false,"path":"photo/index.html","permalink":"https://blog.imsyy.top/photo/index.html","excerpt":"","text":"相 册 壁纸生活待更新待更新"},{"title":"","date":"2021-02-27T08:45:38.197Z","updated":"2021-02-27T08:45:38.197Z","comments":false,"path":"theater/index.html","permalink":"https://blog.imsyy.top/theater/index.html","excerpt":"","text":"放映厅 2020 最美的夜 BiliBili 晚会 Part 1 日落Part 2 月升Part 3 星繁 · 上Part 4 零点倒计时仪式Part 5 星繁 · 下Your browser does not support the video tag.Your browser does not support the video tag.Your browser does not support the video tag.Your browser does not support the video tag.Your browser does not support the video tag."},{"title":"","date":"2021-01-30T12:43:30.909Z","updated":"2021-01-30T12:43:30.909Z","comments":false,"path":"thanks/index.html","permalink":"https://blog.imsyy.top/thanks/index.html","excerpt":"","text":"服 务 库 感谢以下的服务商提供的服务支持 Hexo静态博客网站生成器 jsDelivr一个开源的免费CDN GayHub全球最大的同性交友社区 Gitee一个代码托管平台 Vercel一站式前端部署 LeanCloud一站式后端云服务 又拍云国内知名的专业云服务商 腾讯云一站式云服务 感谢以下的开源项目提供的大力帮助 点击下方标签即可进入对应仓库 加载下方标签可能需要时间"},{"title":"","date":"2020-08-31T03:24:22.000Z","updated":"2021-02-13T11:56:52.796Z","comments":false,"path":"copyright/text/index.html","permalink":"https://blog.imsyy.top/copyright/text/index.html","excerpt":"","text":"CC BY-NC-SA 4.0 署名-非商业性使用-相同方式共享 4.0 国际许可协议 知识共享组织 (“Creative Commons”，“知识共享”) 不是一家律师事务所，也不对外提供法律服务或建议。提供知识共享公共许可协议 ( Creative Commons Public License，以下缩写为 CCPL )并不导致“律师—当事人”关系或其他法律关系的建立。知识共享 ( Creative Commons ) 按其现状提供协议文本和相关信息。知识共享 ( Creative Commons ) 对于其许可协议，或通过该协议提供的作品 ( material ) 或相关信息不提供任何担保，在最大可能程度内，也不对因使用其协议或通过该协议提供的作品 ( material ) 或信息而造成的损失承担损害赔偿责任。 公共许可协议 通过行使本协议所授予的权利 ( 定义如下 )，您接受并同意受到知识共享 ( Creative Commons ) 署名—非商业性使用—相同方式共享4.0国际公共许可协议（ 以下简称 “本公共许可协议” ）的约束。从合同解释的角度来看，您获得授权的对价是接受本协议的条款，许可人授予您这些权利的对价是可以通过采用本协议条款发布授权作品 ( material ) 而获得利益。 第一条 定义演绎作品 ( Adapted Material )指受到著作权与类似权利保护的，基于授权作品 ( Licensed Material ) 而创作的作品 ( material )，例如对授权作品 ( Licensed Material ) 的翻译、改编、编排、改写或其他依据著作权与类似权利需要获得所有人许可的修改。为本公共许可协议之目的，当授权作品 ( Licensed Material ) 为音乐作品、表演或录音时，将其依时间序列关系与动态影像配合一致而形成的作品，视为演绎作品 ( Adapted Material )。 演绎作者的许可指您依据本公共许可协议对在演绎作品 ( Adapted Material ) 中自己所贡献的部分所享有的著作权与类似权利进行授权的协议。 CC BY-NC-SA 4.0指在 知识共享组织 上列出且经知识共享组织 ( Creative Commons ) 认可、实质上与本公共许可协议相当的协议。 著作权与类似权利指著作权和/或与著作权紧密联系的类似权利。类似权利包括但不限于：表演者权、广播组织权、录音录像制作者权、以及数据库特别权利，而不论上述权利的定义和归类如何。为本公共许可协议之目的，第二条第二款第 (1) 项与第 (2) 项 所列权利不属于著作权与类似权利。 有效的技术措施指根据各司法管辖区遵循《世界知识产权组织版权条约》 ( 1996年12月20日通过 ) 第十一条或类似国际协定项下的义务所制定的法律，在没有适当的授权的情况下，禁止使用者规避的技术措施。 例外与限制指合理使用 ( Fair Dealing and Fair Use ) 或其他适用于您对授权作品 ( Licensed Material ) 的使用的著作权与类似权利的例外或限制。 授权要素指知识共享公共许可协议 ( CCPL ) 名称中所包含的协议特征。本公共许可协议的授权要素包括：署名、非商业性使用和相同方式共享。 授权作品 ( Licensed Material )指许可人通过本公共许可协议授权的文学、艺术作品 ( artistic or literary work )，数据库或其他作品 ( material )。 协议所授予的权利指依据本公共许可协议的条款和条件所授予您的各项权利，限于适用于您对授权作品 ( Licensed Material ) 的使用且许可人有权许可的著作权与类似权利。 许可人指通过本公共许可协议进行授权的个人或组织。 非商业性使用指该使用的主要意图或者指向并非获取商业优势或金钱报酬。为本公共许可协议之目的，以数字文件共享或类似方式，用授权作品 ( Licensed Material ) 交换其他受到著作权与类似权利保护的作品 ( material ) 是非商业性使用，只要该交换不涉及金钱报酬的支付。 分享指以需要“协议所授予的权利”许可的任何方法或程序向公众提供作品 ( material )，包括复制、公共展示、公开表演、发行、散布、传播、进口或提供作品 ( material ) 给公众以便其能在其选定的时间和地点接收作品 ( material )。 数据库特别权利指除了著作权之外，衍生于1996年3月11日通过的《欧洲议会与欧盟理事会关于数据库法律保护的指令》( Directive 96/9/EC ) 及其修改或后续版本的权利，或其他国家或地区本质上与之等同的权利。 您指依据本公共许可协议行使其所获得授予之权利的个人或机构。 “您的” 有相应的含义。 第二条 授权范围授权 根据本公共许可协议的条款，许可人授予您在全球范围内，免费的、不可再许可、非独占、不可撤销的许可，以对授权作品 ( Licensed Material ) 行使以下“协议所授予的权利”： 复制和分享授权作品 ( Licensed Material ) 的全部或部分，仅限于非商业性使用 为非商业目的创作、复制和分享演绎作品 ( Adapted Material )。 例外和限制：为避免疑义，若著作权的例外和限制适用于您对授权作品 ( Licensed Material ) 的使用，本公共许可协议将不适用，您也无须遵守本公共许可协议之条款。 期限：本公共许可协议的期限规定于第六条第一款。 媒介和形式：允许的技术修改 许可人授权您在任何媒介以任何形式（ 不论目前已知的或未来出现的 ）行使本协议授予的权利，并为之进行必要的技术修改。许可人放弃或同意不主张任何权利以阻止您为了行使协议项下权利进行必要的技术修改，包括为规避有效技术措施所必须的技术修改。为了本公共许可协议之目的， 基于第二条A款第(4)项 进行的技术修改不构成演绎作品 ( Adapted Material )。 后续接受者 来自许可人的要约——授权作品 ( Licensed Material ) 本授权作品 ( Licensed Material ) 的每一个后续接受者都自动取得许可人的要约，以按照本公共许可协议的条款行使协议授予的权利。 来自许可人的额外要约——演绎作品 ( Adapted Material ) 您基于授权作品 ( Licensed Material ) 创作的演绎作品 ( Adapted Material ) 的每一个后续接受者都自动取得许可人的要约，以按照您所适用的“演绎作者的许可”协议的条款行使协议所授予的权利。 禁止下游限制：若限制授权作品 ( Licensed Material ) 后续接受者行使本协议所授予的权利，则您不得对授权作品 ( Licensed Material ) 提出或增加任何额外的或不同的条款，或使用任何有效技术措施。 并非背书：本公共许可协议不构成、或不得被解释为允许您声明或主张：您或您对授权作品 ( Licensed Material ) 的使用与许可人或第三条第一款第(1)项第一目所规定要求提供署名的权利人相关联，或得到其赞助、同意或被授予正式地位。 其他权利1.依据本公共许可协议，著作人身权，例如保护作品完整权、形象权、隐私权或其他类似的人格权利，不在许可范围内。但是，在条件允许的情况下，许可人可以在必要范围内放弃或同意不主张其权利，以便您行使本协议所授予的权利。 2.本公共许可协议不适用于任何专利权或商标权许可。 3.在自愿的或可放弃的法定或强制许可机制下，许可人在最大可能范围内放弃对您因行使本协议所授予的权利而产生的使用费的权利，不论是直接收取或通过集体管理组织收取。在其他任何情况下（ 包括授权作品 ( Licensed Material ) 被商业性使用的情形 ），许可人明确保留收取使用费的任何权利。 第三条 授权条件 您行使被许可的权利明确受以下条件限制 署名1.若您分享本授权作品 ( Licensed Material ) （ 包含修改格式 ），您必须： 保留如下标识（ 如果许可人提供授权作品 ( Licensed Material ) 的同时提供如下标识 ）： 以许可人要求的任何合理方式，标识本授权作品 ( Licensed Material ) 创作者和其他被指定署名的人的身份（ 包括指定的笔名 ）； 著作权声明 有关本公共许可协议的声明 有关免责的声明 在合理可行情况下，本授权作品 ( Licensed Material ) 的网址 ( URI ) 或超链接 表明您是否修改本授权作品 ( Licensed Material ) 及保留任何先前修改的标记 表明授权作品 ( Licensed Material ) 依据本公共许可协议授权，并提供本公共许可协议全文，或者本公共许可协议的网址 ( URI ) 或超链接 2.依据您分享本授权作品 ( Licensed Material ) 的媒介、方法及情況，您可以采用任何合理方式满足第三条第一款第(1)项的条件 。 例如，提供包含所要求信息来源的网址 ( URI ) 或超链接可算是合理地满足此处的条件。 3.如果许可人要求，您必须在合理可行的范围内移除第三条第一款第(1)项第(1)目所要求的任何信息。 相同方式共享除第三条第一款的条件外，如果您分享您创作的演绎作品 ( Adapted Material ) ，则下列条件也适用： 1.您适用的“演绎作者的许可”协议必须是与本许可协议具有相同授权要素的知识共享 ( Creative Commons ) 许可协议（ 可以是本版本或后续版本 ），或者其他与“署名－非商业性使用－相同方式共享”协议兼容的许可协议。 2.您必须提供您适用的“演绎作者的许可”协议全文或者该许可协议的网址 ( URI ) 或超链接。依据您分享您的演绎作品 ( Adapted Material ) 所使用的媒介、方法及情況，您可以采用任何合理方式满足此条件。 3.您不得提出或施加任何附加或不同的条款或条件、或在演绎作品 ( Adapted Material ) 上应用任何有效的技术措施，以限制使用者行使依您所适用的“演绎作者的许可”协议所授予的权利。 第四条 数据库特别权利 当协议所授予的权利包含数据库特别权利，而该数据库特别权利适用于您对授权作品 ( Licensed Material ) 的使用时： 为避免疑义， 第二条第一款第(1)项授权您， 仅限于以非商业性目的，摘录、再利用、复制和分享全部或绝大部分数据库资料 如果您将数据库资料的全部或绝大部分纳入您享有数据库特别权利的另一数据库，则您享有数据库特别权利的该数据库（ 而非其中的单个内容 ）视为演绎作品 ( Adapted Material )，适用第三条第二款的要求 如果您分享全部或大部分该数据库的资料，您必须遵守第三条第一款规定的条件。 为避免疑义，当协议所授予的权利包含其他著作权与类似权利时，第四条补充且不取代本公共许可协议所规定的您的义务。 第五条 免责声明及责任限制条款 除非许可人另有保证，否则在最大可能范围内，许可人按其现状和现有之基础提供授权作品 ( Licensed Material )，且没有就授权作品 ( Licensed Material ) 做出任何形式的陈述或保证：无论明示、默示、法定或其他形式，包括但不限于任何有关本授权作品 ( Licensed Material ) 的权属保证、可交易性、适于特定目的、未侵害他人权利、没有潜在或其他瑕疵、精确性或是否有错误，不管是否已知或可发现。当免责声明全部或部分不被允许时，此免责声明可能不适用于您。 在最大可能范围内， 对于任何因本公共许可协议或使用授权作品 ( Licensed Material ) 引起的直接的、特殊的、间接的、附随的、连带的、惩罚性的、警告性的，或其他的损失、成本、费用或损害，许可人不对您负任何法律上或其他的责任（ 包括但不限于过失责任 ）。当责任限制部分或全部不被允许时，该限制不适用于您。 前述免责及责任限制声明，应尽可能以最接近于完全排除全部责任的方式解释。 第六条 期限与终止 本公共许可协议在著作权与类似权利存续期间内有效。然而，如果您没有遵守此公共许可协议，则您依据此公共许可协议享有的权利自动终止。 当您使用本授权作品 ( Licensed Material ) 的权利根据第六条第一款终止时，您的权利在下述情况下恢复： 自违反协议的行为纠正之日起自动恢复，但须在您发现违反情形后30日内纠正 根据许可人明示恢复权利的意思表达 为避免疑义，本公共许可协议第六条第二款 不影响许可人就您违反本公共许可协议的行为寻求法律救济。 为避免疑义，许可人也可在任何时间，以另外的条款或条件提供本授权作品 ( Licensed Material )，或者停止传播本授权作品 ( Licensed Material )；然而，许可人此种行为不会终止本公共许可协议。 本协议第一、五、六、七及第八条，不因本公共许可协议终止而失效。 第七条 其他条款和条件 除非明示同意，否则许可人不受您表达的任何附加或不同条款或条件约束。 本公共许可协议未提及的关于授权作品 ( Licensed Material ) 之任何安排、共识或协议，不属于且独立于本公共许可协议的条款及条件。 第八条 解释 为避免疑义，本许可协议不会也不应被解释为减少、限制、约束或施加条件于无需本公共许可协议授权即可依法行使的对授权作品 ( Licensed Material ) 的任何使用。 在最大可能范围内，如果本公共许可协议的任何条款被视为无法执行，该条款在必要的最小限度内，自动调整至可以执行。如果该条款不能被调整，其应自本公共许可协议中排除适用，不影响其余条款的效力。 除非许可人明示同意，本公共许可协议的任何条款或条件均不得放弃。 本公共许可协议条款不构成、也不得被解释为限制或者放弃适用于许可人或您的特权或豁免，包括豁免于任何司法管辖区或行政机构的法律程序。 知识共享组织 ( Creative Commons ) 不是其公共许可协议的一方 。尽管如此，知识共享组织 ( Creative Commons ) 可以选择其中一种公共许可协议适用于其发表的作品(material)，在此种情况下被视为许可人。知识共享公共许可协议 ( CCPL ) 的文本属于公共领域，适用 CC0 公共许可协议。 除用于向公众表明本作品 ( material ) 是依照知识共享(Creative Commons)公共许可协议授权，或知识共享组织 ( Creative Commons ) 政策另有规定允许以外，如未经知识共享组织 ( Creative Commons ) 事先书面同意，任何一方均不得使用“知识共享” ( Creative Commons ) 商标和其他相关商标及标识。包括但不限于，将该商标或标识用于对知识共享公共许可协议 ( CCPL ) 做出的未经同意的修改，或与授权作品 ( Licensed Material ) 使用有关的其他安排、共识或协议。为避免疑义，本段关于商标的限制性规定不构成公共许可协议之一部分。"},{"title":"","date":"2021-02-02T03:16:26.814Z","updated":"2021-02-02T03:16:26.814Z","comments":true,"path":"game/cat/index.html","permalink":"https://blog.imsyy.top/game/cat/index.html","excerpt":"","text":"重载游戏 返回列表"},{"title":"","date":"2020-10-30T06:56:06.881Z","updated":"2018-10-29T16:55:33.000Z","comments":true,"path":"game/more/index.css","permalink":"https://blog.imsyy.top/game/more/index.css","excerpt":"","text":"/* build time:Thu Mar 04 2021 21:43:20 GMT+0800 (GMT+08:00)*/ body,html{padding:0;margin:0;width:100%;height:100%}.icon{-webkit-user-select:none;user-select:none;display:inline-block}.icon-offline{content:-webkit-image-set(url(assets/default_100_percent/100-error-offline.png) 1x,url(assets/default_200_percent/200-error-offline.png) 2x);position:relative}.hidden{display:none}.offline .interstitial-wrapper{color:#2b2b2b;font-size:1em;line-height:1.55;margin:0 auto;max-width:600px;padding-top:100px;width:100%}.offline .runner-container{height:150px;max-width:600px;overflow:hidden;position:absolute;top:35px;width:44px}.offline .runner-canvas{height:150px;max-width:600px;opacity:1;overflow:hidden;position:absolute;top:0;z-index:2}.offline .controller{background:rgba(247,247,247,.1);height:100vh;left:0;position:absolute;top:0;width:100vw;z-index:1}#offline-resources{display:none}@media (max-width:420px){.suggested-left>#control-buttons,.suggested-right>#control-buttons{float:none}.snackbar{left:0;bottom:0;width:100%;border-radius:0}}@media (max-height:350px){h1{margin:0 0 15px}.icon-offline{margin:0 0 10px}.interstitial-wrapper{margin-top:5%}.nav-wrapper{margin-top:30px}}@media (min-width:600px) and (max-width:736px) and (orientation:landscape){.offline .interstitial-wrapper{margin-left:0;margin-right:0}}@media (min-width:420px) and (max-width:736px) and (min-height:240px) and (max-height:420px) and (orientation:landscape){.interstitial-wrapper{margin-bottom:100px}}@media (min-height:240px) and (orientation:landscape){.offline .interstitial-wrapper{margin-bottom:90px}.icon-offline{margin-bottom:20px}}@media (max-height:320px) and (orientation:landscape){.icon-offline{margin-bottom:0}.offline .runner-container{top:10px}}@media (max-width:240px){.interstitial-wrapper{overflow:inherit;padding:0 8px}} /* rebuild by neat */"},{"title":"","date":"2020-10-30T07:34:20.854Z","updated":"2020-10-30T07:34:20.854Z","comments":false,"path":"game/more/index.html","permalink":"https://blog.imsyy.top/game/more/index.html","excerpt":"","text":""},{"title":"","date":"2020-10-30T06:56:06.884Z","updated":"2018-10-29T16:55:33.000Z","comments":true,"path":"game/more/index.js","permalink":"https://blog.imsyy.top/game/more/index.js","excerpt":"","text":"// Copyright (c) 2014 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. // extract from chromium source code by @liuwayong (function () { 'use strict'; /** * T-Rex runner. * @param {string} outerContainerId Outer containing element id. * @param {Object} opt_config * @constructor * @export */ function Runner(outerContainerId, opt_config) { // Singleton if (Runner.instance_) { return Runner.instance_; } Runner.instance_ = this; this.outerContainerEl = document.querySelector(outerContainerId); this.containerEl = null; this.snackbarEl = null; this.detailsButton = this.outerContainerEl.querySelector('#details-button'); this.config = opt_config || Runner.config; this.dimensions = Runner.defaultDimensions; this.canvas = null; this.canvasCtx = null; this.tRex = null; this.distanceMeter = null; this.distanceRan = 0; this.highestScore = 0; this.time = 0; this.runningTime = 0; this.msPerFrame = 1000 / FPS; this.currentSpeed = this.config.SPEED; this.obstacles = []; this.activated = false; // Whether the easter egg has been activated. this.playing = false; // Whether the game is currently in play state. this.crashed = false; this.paused = false; this.inverted = false; this.invertTimer = 0; this.resizeTimerId_ = null; this.playCount = 0; // Sound FX. this.audioBuffer = null; this.soundFx = {}; // Global web audio context for playing sounds. this.audioContext = null; // Images. this.images = {}; this.imagesLoaded = 0; if (this.isDisabled()) { this.setupDisabledRunner(); } else { this.loadImages(); } } window['Runner'] = Runner; /** * Default game width. * @const */ var DEFAULT_WIDTH = 600; /** * Frames per second. * @const */ var FPS = 60; /** @const */ var IS_HIDPI = window.devicePixelRatio > 1; /** @const */ var IS_IOS = /iPad|iPhone|iPod/.test(window.navigator.platform); /** @const */ var IS_MOBILE = /Android/.test(window.navigator.userAgent) || IS_IOS; /** @const */ var IS_TOUCH_ENABLED = 'ontouchstart' in window; /** * Default game configuration. * @enum {number} */ Runner.config = { ACCELERATION: 0.001, BG_CLOUD_SPEED: 0.2, BOTTOM_PAD: 10, CLEAR_TIME: 3000, CLOUD_FREQUENCY: 0.5, GAMEOVER_CLEAR_TIME: 750, GAP_COEFFICIENT: 0.6, GRAVITY: 0.6, INITIAL_JUMP_VELOCITY: 12, INVERT_FADE_DURATION: 12000, INVERT_DISTANCE: 700, MAX_BLINK_COUNT: 3, MAX_CLOUDS: 6, MAX_OBSTACLE_LENGTH: 3, MAX_OBSTACLE_DUPLICATION: 2, MAX_SPEED: 13, MIN_JUMP_HEIGHT: 35, MOBILE_SPEED_COEFFICIENT: 1.2, RESOURCE_TEMPLATE_ID: 'audio-resources', SPEED: 6, SPEED_DROP_COEFFICIENT: 3 }; /** * Default dimensions. * @enum {string} */ Runner.defaultDimensions = { WIDTH: DEFAULT_WIDTH, HEIGHT: 150 }; /** * CSS class names. * @enum {string} */ Runner.classes = { CANVAS: 'runner-canvas', CONTAINER: 'runner-container', CRASHED: 'crashed', ICON: 'icon-offline', INVERTED: 'inverted', SNACKBAR: 'snackbar', SNACKBAR_SHOW: 'snackbar-show', TOUCH_CONTROLLER: 'controller' }; /** * Sprite definition layout of the spritesheet. * @enum {Object} */ Runner.spriteDefinition = { LDPI: { CACTUS_LARGE: { x: 332, y: 2 }, CACTUS_SMALL: { x: 228, y: 2 }, CLOUD: { x: 86, y: 2 }, HORIZON: { x: 2, y: 54 }, MOON: { x: 484, y: 2 }, PTERODACTYL: { x: 134, y: 2 }, RESTART: { x: 2, y: 2 }, TEXT_SPRITE: { x: 655, y: 2 }, TREX: { x: 848, y: 2 }, STAR: { x: 645, y: 2 } }, HDPI: { CACTUS_LARGE: { x: 652, y: 2 }, CACTUS_SMALL: { x: 446, y: 2 }, CLOUD: { x: 166, y: 2 }, HORIZON: { x: 2, y: 104 }, MOON: { x: 954, y: 2 }, PTERODACTYL: { x: 260, y: 2 }, RESTART: { x: 2, y: 2 }, TEXT_SPRITE: { x: 1294, y: 2 }, TREX: { x: 1678, y: 2 }, STAR: { x: 1276, y: 2 } } }; /** * Sound FX. Reference to the ID of the audio tag on interstitial page. * @enum {string} */ Runner.sounds = { BUTTON_PRESS: 'offline-sound-press', HIT: 'offline-sound-hit', SCORE: 'offline-sound-reached' }; /** * Key code mapping. * @enum {Object} */ Runner.keycodes = { JUMP: { '38': 1, '32': 1 }, // Up, spacebar DUCK: { '40': 1 }, // Down RESTART: { '13': 1 } // Enter }; /** * Runner event names. * @enum {string} */ Runner.events = { ANIM_END: 'webkitAnimationEnd', CLICK: 'click', KEYDOWN: 'keydown', KEYUP: 'keyup', MOUSEDOWN: 'mousedown', MOUSEUP: 'mouseup', RESIZE: 'resize', TOUCHEND: 'touchend', TOUCHSTART: 'touchstart', VISIBILITY: 'visibilitychange', BLUR: 'blur', FOCUS: 'focus', LOAD: 'load' }; Runner.prototype = { /** * Whether the easter egg has been disabled. CrOS enterprise enrolled devices. * @return {boolean} */ isDisabled: function () { // return loadTimeData && loadTimeData.valueExists('disabledEasterEgg'); return false; }, /** * For disabled instances, set up a snackbar with the disabled message. */ setupDisabledRunner: function () { this.containerEl = document.createElement('div'); this.containerEl.className = Runner.classes.SNACKBAR; this.containerEl.textContent = loadTimeData.getValue('disabledEasterEgg'); this.outerContainerEl.appendChild(this.containerEl); // Show notification when the activation key is pressed. document.addEventListener(Runner.events.KEYDOWN, function (e) { if (Runner.keycodes.JUMP[e.keyCode]) { this.containerEl.classList.add(Runner.classes.SNACKBAR_SHOW); document.querySelector('.icon').classList.add('icon-disabled'); } }.bind(this)); }, /** * Setting individual settings for debugging. * @param {string} setting * @param {*} value */ updateConfigSetting: function (setting, value) { if (setting in this.config && value != undefined) { this.config[setting] = value; switch (setting) { case 'GRAVITY': case 'MIN_JUMP_HEIGHT': case 'SPEED_DROP_COEFFICIENT': this.tRex.config[setting] = value; break; case 'INITIAL_JUMP_VELOCITY': this.tRex.setJumpVelocity(value); break; case 'SPEED': this.setSpeed(value); break; } } }, /** * Cache the appropriate image sprite from the page and get the sprite sheet * definition. */ loadImages: function () { if (IS_HIDPI) { Runner.imageSprite = document.getElementById('offline-resources-2x'); this.spriteDef = Runner.spriteDefinition.HDPI; } else { Runner.imageSprite = document.getElementById('offline-resources-1x'); this.spriteDef = Runner.spriteDefinition.LDPI; } if (Runner.imageSprite.complete) { this.init(); } else { // If the images are not yet loaded, add a listener. Runner.imageSprite.addEventListener(Runner.events.LOAD, this.init.bind(this)); } }, /** * Load and decode base 64 encoded sounds. */ loadSounds: function () { if (!IS_IOS) { this.audioContext = new AudioContext(); var resourceTemplate = document.getElementById(this.config.RESOURCE_TEMPLATE_ID).content; for (var sound in Runner.sounds) { var soundSrc = resourceTemplate.getElementById(Runner.sounds[sound]).src; soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1); var buffer = decodeBase64ToArrayBuffer(soundSrc); // Async, so no guarantee of order in array. this.audioContext.decodeAudioData(buffer, function (index, audioData) { this.soundFx[index] = audioData; }.bind(this, sound)); } } }, /** * Sets the game speed. Adjust the speed accordingly if on a smaller screen. * @param {number} opt_speed */ setSpeed: function (opt_speed) { var speed = opt_speed || this.currentSpeed; // Reduce the speed on smaller mobile screens. if (this.dimensions.WIDTH < DEFAULT_WIDTH) { var mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH * this.config.MOBILE_SPEED_COEFFICIENT; this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed; } else if (opt_speed) { this.currentSpeed = opt_speed; } }, /** * Game initialiser. */ init: function () { // Hide the static icon. document.querySelector('.' + Runner.classes.ICON).style.visibility = 'hidden'; this.adjustDimensions(); this.setSpeed(); this.containerEl = document.createElement('div'); this.containerEl.className = Runner.classes.CONTAINER; // Player canvas container. this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH, this.dimensions.HEIGHT, Runner.classes.PLAYER); this.canvasCtx = this.canvas.getContext('2d'); this.canvasCtx.fillStyle = '#f7f7f7'; this.canvasCtx.fill(); Runner.updateCanvasScaling(this.canvas); // Horizon contains clouds, obstacles and the ground. this.horizon = new Horizon(this.canvas, this.spriteDef, this.dimensions, this.config.GAP_COEFFICIENT); // Distance meter this.distanceMeter = new DistanceMeter(this.canvas, this.spriteDef.TEXT_SPRITE, this.dimensions.WIDTH); // Draw t-rex this.tRex = new Trex(this.canvas, this.spriteDef.TREX); this.outerContainerEl.appendChild(this.containerEl); if (IS_MOBILE) { this.createTouchController(); } this.startListening(); this.update(); window.addEventListener(Runner.events.RESIZE, this.debounceResize.bind(this)); }, /** * Create the touch controller. A div that covers whole screen. */ createTouchController: function () { this.touchController = document.createElement('div'); this.touchController.className = Runner.classes.TOUCH_CONTROLLER; this.outerContainerEl.appendChild(this.touchController); }, /** * Debounce the resize event. */ debounceResize: function () { if (!this.resizeTimerId_) { this.resizeTimerId_ = setInterval(this.adjustDimensions.bind(this), 250); } }, /** * Adjust game space dimensions on resize. */ adjustDimensions: function () { clearInterval(this.resizeTimerId_); this.resizeTimerId_ = null; var boxStyles = window.getComputedStyle(this.outerContainerEl); var padding = Number(boxStyles.paddingLeft.substr(0, boxStyles.paddingLeft.length - 2)); this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2; // Redraw the elements back onto the canvas. if (this.canvas) { this.canvas.width = this.dimensions.WIDTH; this.canvas.height = this.dimensions.HEIGHT; Runner.updateCanvasScaling(this.canvas); this.distanceMeter.calcXPos(this.dimensions.WIDTH); this.clearCanvas(); this.horizon.update(0, 0, true); this.tRex.update(0); // Outer container and distance meter. if (this.playing || this.crashed || this.paused) { this.containerEl.style.width = this.dimensions.WIDTH + 'px'; this.containerEl.style.height = this.dimensions.HEIGHT + 'px'; this.distanceMeter.update(0, Math.ceil(this.distanceRan)); this.stop(); } else { this.tRex.draw(0, 0); } // Game over panel. if (this.crashed && this.gameOverPanel) { this.gameOverPanel.updateDimensions(this.dimensions.WIDTH); this.gameOverPanel.draw(); } } }, /** * Play the game intro. * Canvas container width expands out to the full width. */ playIntro: function () { if (!this.activated && !this.crashed) { this.playingIntro = true; this.tRex.playingIntro = true; // CSS animation definition. var keyframes = '@-webkit-keyframes intro { ' + 'from { width:' + Trex.config.WIDTH + 'px }' + 'to { width: ' + this.dimensions.WIDTH + 'px }' + '}'; // create a style sheet to put the keyframe rule in // and then place the style sheet in the html head var sheet = document.createElement('style'); sheet.innerHTML = keyframes; document.head.appendChild(sheet); this.containerEl.addEventListener(Runner.events.ANIM_END, this.startGame.bind(this)); this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both'; this.containerEl.style.width = this.dimensions.WIDTH + 'px'; // if (this.touchController) { // this.outerContainerEl.appendChild(this.touchController); // } this.playing = true; this.activated = true; } else if (this.crashed) { this.restart(); } }, /** * Update the game status to started. */ startGame: function () { this.runningTime = 0; this.playingIntro = false; this.tRex.playingIntro = false; this.containerEl.style.webkitAnimation = ''; this.playCount++; // Handle tabbing off the page. Pause the current game. document.addEventListener(Runner.events.VISIBILITY, this.onVisibilityChange.bind(this)); window.addEventListener(Runner.events.BLUR, this.onVisibilityChange.bind(this)); window.addEventListener(Runner.events.FOCUS, this.onVisibilityChange.bind(this)); }, clearCanvas: function () { this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH, this.dimensions.HEIGHT); }, /** * Update the game frame and schedules the next one. */ update: function () { this.updatePending = false; var now = getTimeStamp(); var deltaTime = now - (this.time || now); this.time = now; if (this.playing) { this.clearCanvas(); if (this.tRex.jumping) { this.tRex.updateJump(deltaTime); } this.runningTime += deltaTime; var hasObstacles = this.runningTime > this.config.CLEAR_TIME; // First jump triggers the intro. if (this.tRex.jumpCount == 1 && !this.playingIntro) { this.playIntro(); } // The horizon doesn't move until the intro is over. if (this.playingIntro) { this.horizon.update(0, this.currentSpeed, hasObstacles); } else { deltaTime = !this.activated ? 0 : deltaTime; this.horizon.update(deltaTime, this.currentSpeed, hasObstacles, this.inverted); } // Check for collisions. var collision = hasObstacles && checkForCollision(this.horizon.obstacles[0], this.tRex); if (!collision) { this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame; if (this.currentSpeed < this.config.MAX_SPEED) { this.currentSpeed += this.config.ACCELERATION; } } else { this.gameOver(); } var playAchievementSound = this.distanceMeter.update(deltaTime, Math.ceil(this.distanceRan)); if (playAchievementSound) { this.playSound(this.soundFx.SCORE); } // Night mode. if (this.invertTimer > this.config.INVERT_FADE_DURATION) { this.invertTimer = 0; this.invertTrigger = false; this.invert(); } else if (this.invertTimer) { this.invertTimer += deltaTime; } else { var actualDistance = this.distanceMeter.getActualDistance(Math.ceil(this.distanceRan)); if (actualDistance > 0) { this.invertTrigger = !(actualDistance % this.config.INVERT_DISTANCE); if (this.invertTrigger && this.invertTimer === 0) { this.invertTimer += deltaTime; this.invert(); } } } } if (this.playing || (!this.activated && this.tRex.blinkCount < Runner.config.MAX_BLINK_COUNT)) { this.tRex.update(deltaTime); this.scheduleNextUpdate(); } }, /** * Event handler. */ handleEvent: function (e) { return (function (evtType, events) { switch (evtType) { case events.KEYDOWN: case events.TOUCHSTART: case events.MOUSEDOWN: this.onKeyDown(e); break; case events.KEYUP: case events.TOUCHEND: case events.MOUSEUP: this.onKeyUp(e); break; } }.bind(this))(e.type, Runner.events); }, /** * Bind relevant key / mouse / touch listeners. */ startListening: function () { // Keys. document.addEventListener(Runner.events.KEYDOWN, this); document.addEventListener(Runner.events.KEYUP, this); if (IS_MOBILE) { // Mobile only touch devices. this.touchController.addEventListener(Runner.events.TOUCHSTART, this); this.touchController.addEventListener(Runner.events.TOUCHEND, this); this.containerEl.addEventListener(Runner.events.TOUCHSTART, this); } else { // Mouse. document.addEventListener(Runner.events.MOUSEDOWN, this); document.addEventListener(Runner.events.MOUSEUP, this); } }, /** * Remove all listeners. */ stopListening: function () { document.removeEventListener(Runner.events.KEYDOWN, this); document.removeEventListener(Runner.events.KEYUP, this); if (IS_MOBILE) { this.touchController.removeEventListener(Runner.events.TOUCHSTART, this); this.touchController.removeEventListener(Runner.events.TOUCHEND, this); this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this); } else { document.removeEventListener(Runner.events.MOUSEDOWN, this); document.removeEventListener(Runner.events.MOUSEUP, this); } }, /** * Process keydown. * @param {Event} e */ onKeyDown: function (e) { // Prevent native page scrolling whilst tapping on mobile. if (IS_MOBILE && this.playing) { e.preventDefault(); } if (e.target != this.detailsButton) { if (!this.crashed && (Runner.keycodes.JUMP[e.keyCode] || e.type == Runner.events.TOUCHSTART)) { if (!this.playing) { this.loadSounds(); this.playing = true; this.update(); if (window.errorPageController) { errorPageController.trackEasterEgg(); } } // Play sound effect and jump on starting the game for the first time. if (!this.tRex.jumping && !this.tRex.ducking) { this.playSound(this.soundFx.BUTTON_PRESS); this.tRex.startJump(this.currentSpeed); } } if (this.crashed && e.type == Runner.events.TOUCHSTART && e.currentTarget == this.containerEl) { this.restart(); } } if (this.playing && !this.crashed && Runner.keycodes.DUCK[e.keyCode]) { e.preventDefault(); if (this.tRex.jumping) { // Speed drop, activated only when jump key is not pressed. this.tRex.setSpeedDrop(); } else if (!this.tRex.jumping && !this.tRex.ducking) { // Duck. this.tRex.setDuck(true); } } }, /** * Process key up. * @param {Event} e */ onKeyUp: function (e) { var keyCode = String(e.keyCode); var isjumpKey = Runner.keycodes.JUMP[keyCode] || e.type == Runner.events.TOUCHEND || e.type == Runner.events.MOUSEDOWN; if (this.isRunning() && isjumpKey) { this.tRex.endJump(); } else if (Runner.keycodes.DUCK[keyCode]) { this.tRex.speedDrop = false; this.tRex.setDuck(false); } else if (this.crashed) { // Check that enough time has elapsed before allowing jump key to restart. var deltaTime = getTimeStamp() - this.time; if (Runner.keycodes.RESTART[keyCode] || this.isLeftClickOnCanvas(e) || (deltaTime >= this.config.GAMEOVER_CLEAR_TIME && Runner.keycodes.JUMP[keyCode])) { this.restart(); } } else if (this.paused && isjumpKey) { // Reset the jump state this.tRex.reset(); this.play(); } }, /** * Returns whether the event was a left click on canvas. * On Windows right click is registered as a click. * @param {Event} e * @return {boolean} */ isLeftClickOnCanvas: function (e) { return e.button != null && e.button < 2 && e.type == Runner.events.MOUSEUP && e.target == this.canvas; }, /** * RequestAnimationFrame wrapper. */ scheduleNextUpdate: function () { if (!this.updatePending) { this.updatePending = true; this.raqId = requestAnimationFrame(this.update.bind(this)); } }, /** * Whether the game is running. * @return {boolean} */ isRunning: function () { return !!this.raqId; }, /** * Game over state. */ gameOver: function () { this.playSound(this.soundFx.HIT); vibrate(200); this.stop(); this.crashed = true; this.distanceMeter.acheivement = false; this.tRex.update(100, Trex.status.CRASHED); // Game over panel. if (!this.gameOverPanel) { this.gameOverPanel = new GameOverPanel(this.canvas, this.spriteDef.TEXT_SPRITE, this.spriteDef.RESTART, this.dimensions); } else { this.gameOverPanel.draw(); } // Update the high score. if (this.distanceRan > this.highestScore) { this.highestScore = Math.ceil(this.distanceRan); this.distanceMeter.setHighScore(this.highestScore); } // Reset the time clock. this.time = getTimeStamp(); }, stop: function () { this.playing = false; this.paused = true; cancelAnimationFrame(this.raqId); this.raqId = 0; }, play: function () { if (!this.crashed) { this.playing = true; this.paused = false; this.tRex.update(0, Trex.status.RUNNING); this.time = getTimeStamp(); this.update(); } }, restart: function () { if (!this.raqId) { this.playCount++; this.runningTime = 0; this.playing = true; this.crashed = false; this.distanceRan = 0; this.setSpeed(this.config.SPEED); this.time = getTimeStamp(); this.containerEl.classList.remove(Runner.classes.CRASHED); this.clearCanvas(); this.distanceMeter.reset(this.highestScore); this.horizon.reset(); this.tRex.reset(); this.playSound(this.soundFx.BUTTON_PRESS); this.invert(true); this.update(); } }, /** * Pause the game if the tab is not in focus. */ onVisibilityChange: function (e) { if (document.hidden || document.webkitHidden || e.type == 'blur' || document.visibilityState != 'visible') { this.stop(); } else if (!this.crashed) { this.tRex.reset(); this.play(); } }, /** * Play a sound. * @param {SoundBuffer} soundBuffer */ playSound: function (soundBuffer) { if (soundBuffer) { var sourceNode = this.audioContext.createBufferSource(); sourceNode.buffer = soundBuffer; sourceNode.connect(this.audioContext.destination); sourceNode.start(0); } }, /** * Inverts the current page / canvas colors. * @param {boolean} Whether to reset colors. */ invert: function (reset) { if (reset) { document.body.classList.toggle(Runner.classes.INVERTED, false); this.invertTimer = 0; this.inverted = false; } else { this.inverted = document.body.classList.toggle(Runner.classes.INVERTED, this.invertTrigger); } } }; /** * Updates the canvas size taking into * account the backing store pixel ratio and * the device pixel ratio. * * See article by Paul Lewis: * http://www.html5rocks.com/en/tutorials/canvas/hidpi/ * * @param {HTMLCanvasElement} canvas * @param {number} opt_width * @param {number} opt_height * @return {boolean} Whether the canvas was scaled. */ Runner.updateCanvasScaling = function (canvas, opt_width, opt_height) { var context = canvas.getContext('2d'); // Query the various pixel ratios var devicePixelRatio = Math.floor(window.devicePixelRatio) || 1; var backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1; var ratio = devicePixelRatio / backingStoreRatio; // Upscale the canvas if the two ratios don't match if (devicePixelRatio !== backingStoreRatio) { var oldWidth = opt_width || canvas.width; var oldHeight = opt_height || canvas.height; canvas.width = oldWidth * ratio; canvas.height = oldHeight * ratio; canvas.style.width = oldWidth + 'px'; canvas.style.height = oldHeight + 'px'; // Scale the context to counter the fact that we've manually scaled // our canvas element. context.scale(ratio, ratio); return true; } else if (devicePixelRatio == 1) { // Reset the canvas width / height. Fixes scaling bug when the page is // zoomed and the devicePixelRatio changes accordingly. canvas.style.width = canvas.width + 'px'; canvas.style.height = canvas.height + 'px'; } return false; }; /** * Get random number. * @param {number} min * @param {number} max * @param {number} */ function getRandomNum(min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; } /** * Vibrate on mobile devices. * @param {number} duration Duration of the vibration in milliseconds. */ function vibrate(duration) { if (IS_MOBILE && window.navigator.vibrate) { window.navigator.vibrate(duration); } } /** * Create canvas element. * @param {HTMLElement} container Element to append canvas to. * @param {number} width * @param {number} height * @param {string} opt_classname * @return {HTMLCanvasElement} */ function createCanvas(container, width, height, opt_classname) { var canvas = document.createElement('canvas'); canvas.className = opt_classname ? Runner.classes.CANVAS + ' ' + opt_classname : Runner.classes.CANVAS; canvas.width = width; canvas.height = height; container.appendChild(canvas); return canvas; } /** * Decodes the base 64 audio to ArrayBuffer used by Web Audio. * @param {string} base64String */ function decodeBase64ToArrayBuffer(base64String) { var len = (base64String.length / 4) * 3; var str = atob(base64String); var arrayBuffer = new ArrayBuffer(len); var bytes = new Uint8Array(arrayBuffer); for (var i = 0; i < len; i++) { bytes[i] = str.charCodeAt(i); } return bytes.buffer; } /** * Return the current timestamp. * @return {number} */ function getTimeStamp() { return IS_IOS ? new Date().getTime() : performance.now(); } //****************************************************************************** /** * Game over panel. * @param {!HTMLCanvasElement} canvas * @param {Object} textImgPos * @param {Object} restartImgPos * @param {!Object} dimensions Canvas dimensions. * @constructor */ function GameOverPanel(canvas, textImgPos, restartImgPos, dimensions) { this.canvas = canvas; this.canvasCtx = canvas.getContext('2d'); this.canvasDimensions = dimensions; this.textImgPos = textImgPos; this.restartImgPos = restartImgPos; this.draw(); }; /** * Dimensions used in the panel. * @enum {number} */ GameOverPanel.dimensions = { TEXT_X: 0, TEXT_Y: 13, TEXT_WIDTH: 191, TEXT_HEIGHT: 11, RESTART_WIDTH: 36, RESTART_HEIGHT: 32 }; GameOverPanel.prototype = { /** * Update the panel dimensions. * @param {number} width New canvas width. * @param {number} opt_height Optional new canvas height. */ updateDimensions: function (width, opt_height) { this.canvasDimensions.WIDTH = width; if (opt_height) { this.canvasDimensions.HEIGHT = opt_height; } }, /** * Draw the panel. */ draw: function () { var dimensions = GameOverPanel.dimensions; var centerX = this.canvasDimensions.WIDTH / 2; // Game over text. var textSourceX = dimensions.TEXT_X; var textSourceY = dimensions.TEXT_Y; var textSourceWidth = dimensions.TEXT_WIDTH; var textSourceHeight = dimensions.TEXT_HEIGHT; var textTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2)); var textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3); var textTargetWidth = dimensions.TEXT_WIDTH; var textTargetHeight = dimensions.TEXT_HEIGHT; var restartSourceWidth = dimensions.RESTART_WIDTH; var restartSourceHeight = dimensions.RESTART_HEIGHT; var restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2); var restartTargetY = this.canvasDimensions.HEIGHT / 2; if (IS_HIDPI) { textSourceY *= 2; textSourceX *= 2; textSourceWidth *= 2; textSourceHeight *= 2; restartSourceWidth *= 2; restartSourceHeight *= 2; } textSourceX += this.textImgPos.x; textSourceY += this.textImgPos.y; // Game over text from sprite. this.canvasCtx.drawImage(Runner.imageSprite, textSourceX, textSourceY, textSourceWidth, textSourceHeight, textTargetX, textTargetY, textTargetWidth, textTargetHeight); // Restart button. this.canvasCtx.drawImage(Runner.imageSprite, this.restartImgPos.x, this.restartImgPos.y, restartSourceWidth, restartSourceHeight, restartTargetX, restartTargetY, dimensions.RESTART_WIDTH, dimensions.RESTART_HEIGHT); } }; //****************************************************************************** /** * Check for a collision. * @param {!Obstacle} obstacle * @param {!Trex} tRex T-rex object. * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing * collision boxes. * @return {Array} */ function checkForCollision(obstacle, tRex, opt_canvasCtx) { var obstacleBoxXPos = Runner.defaultDimensions.WIDTH + obstacle.xPos; // Adjustments are made to the bounding box as there is a 1 pixel white // border around the t-rex and obstacles. var tRexBox = new CollisionBox( tRex.xPos + 1, tRex.yPos + 1, tRex.config.WIDTH - 2, tRex.config.HEIGHT - 2); var obstacleBox = new CollisionBox( obstacle.xPos + 1, obstacle.yPos + 1, obstacle.typeConfig.width * obstacle.size - 2, obstacle.typeConfig.height - 2); // Debug outer box if (opt_canvasCtx) { drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox); } // Simple outer bounds check. if (boxCompare(tRexBox, obstacleBox)) { var collisionBoxes = obstacle.collisionBoxes; var tRexCollisionBoxes = tRex.ducking ? Trex.collisionBoxes.DUCKING : Trex.collisionBoxes.RUNNING; // Detailed axis aligned box check. for (var t = 0; t < tRexCollisionBoxes.length; t++) { for (var i = 0; i < collisionBoxes.length; i++) { // Adjust the box to actual positions. var adjTrexBox = createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox); var adjObstacleBox = createAdjustedCollisionBox(collisionBoxes[i], obstacleBox); var crashed = boxCompare(adjTrexBox, adjObstacleBox); // Draw boxes for debug. if (opt_canvasCtx) { drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox); } if (crashed) { return [adjTrexBox, adjObstacleBox]; } } } } return false; }; /** * Adjust the collision box. * @param {!CollisionBox} box The original box. * @param {!CollisionBox} adjustment Adjustment box. * @return {CollisionBox} The adjusted collision box object. */ function createAdjustedCollisionBox(box, adjustment) { return new CollisionBox( box.x + adjustment.x, box.y + adjustment.y, box.width, box.height); }; /** * Draw the collision boxes for debug. */ function drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) { canvasCtx.save(); canvasCtx.strokeStyle = '#f00'; canvasCtx.strokeRect(tRexBox.x, tRexBox.y, tRexBox.width, tRexBox.height); canvasCtx.strokeStyle = '#0f0'; canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y, obstacleBox.width, obstacleBox.height); canvasCtx.restore(); }; /** * Compare two collision boxes for a collision. * @param {CollisionBox} tRexBox * @param {CollisionBox} obstacleBox * @return {boolean} Whether the boxes intersected. */ function boxCompare(tRexBox, obstacleBox) { var crashed = false; var tRexBoxX = tRexBox.x; var tRexBoxY = tRexBox.y; var obstacleBoxX = obstacleBox.x; var obstacleBoxY = obstacleBox.y; // Axis-Aligned Bounding Box method. if (tRexBox.x < obstacleBoxX + obstacleBox.width && tRexBox.x + tRexBox.width > obstacleBoxX && tRexBox.y < obstacleBox.y + obstacleBox.height && tRexBox.height + tRexBox.y > obstacleBox.y) { crashed = true; } return crashed; }; //****************************************************************************** /** * Collision box object. * @param {number} x X position. * @param {number} y Y Position. * @param {number} w Width. * @param {number} h Height. */ function CollisionBox(x, y, w, h) { this.x = x; this.y = y; this.width = w; this.height = h; }; //****************************************************************************** /** * Obstacle. * @param {HTMLCanvasCtx} canvasCtx * @param {Obstacle.type} type * @param {Object} spritePos Obstacle position in sprite. * @param {Object} dimensions * @param {number} gapCoefficient Mutipler in determining the gap. * @param {number} speed * @param {number} opt_xOffset */ function Obstacle(canvasCtx, type, spriteImgPos, dimensions, gapCoefficient, speed, opt_xOffset) { this.canvasCtx = canvasCtx; this.spritePos = spriteImgPos; this.typeConfig = type; this.gapCoefficient = gapCoefficient; this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH); this.dimensions = dimensions; this.remove = false; this.xPos = dimensions.WIDTH + (opt_xOffset || 0); this.yPos = 0; this.width = 0; this.collisionBoxes = []; this.gap = 0; this.speedOffset = 0; // For animated obstacles. this.currentFrame = 0; this.timer = 0; this.init(speed); }; /** * Coefficient for calculating the maximum gap. * @const */ Obstacle.MAX_GAP_COEFFICIENT = 1.5; /** * Maximum obstacle grouping count. * @const */ Obstacle.MAX_OBSTACLE_LENGTH = 3, Obstacle.prototype = { /** * Initialise the DOM for the obstacle. * @param {number} speed */ init: function (speed) { this.cloneCollisionBoxes(); // Only allow sizing if we're at the right speed. if (this.size > 1 && this.typeConfig.multipleSpeed > speed) { this.size = 1; } this.width = this.typeConfig.width * this.size; // Check if obstacle can be positioned at various heights. if (Array.isArray(this.typeConfig.yPos)) { var yPosConfig = IS_MOBILE ? this.typeConfig.yPosMobile : this.typeConfig.yPos; this.yPos = yPosConfig[getRandomNum(0, yPosConfig.length - 1)]; } else { this.yPos = this.typeConfig.yPos; } this.draw(); // Make collision box adjustments, // Central box is adjusted to the size as one box. // ____ ______ ________ // _| |-| _| |-| _| |-| // | || | | || | | || | // | | 1 | | | | 2 | | | | 3 | | // |_|___|_| |_|_____|_| |_|_______|_| // if (this.size > 1) { this.collisionBoxes[1].width = this.width - this.collisionBoxes[0].width - this.collisionBoxes[2].width; this.collisionBoxes[2].x = this.width - this.collisionBoxes[2].width; } // For obstacles that go at a different speed from the horizon. if (this.typeConfig.speedOffset) { this.speedOffset = Math.random() > 0.5 ? this.typeConfig.speedOffset : -this.typeConfig.speedOffset; } this.gap = this.getGap(this.gapCoefficient, speed); }, /** * Draw and crop based on size. */ draw: function () { var sourceWidth = this.typeConfig.width; var sourceHeight = this.typeConfig.height; if (IS_HIDPI) { sourceWidth = sourceWidth * 2; sourceHeight = sourceHeight * 2; } // X position in sprite. var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1)) + this.spritePos.x; // Animation frames. if (this.currentFrame > 0) { sourceX += sourceWidth * this.currentFrame; } this.canvasCtx.drawImage(Runner.imageSprite, sourceX, this.spritePos.y, sourceWidth * this.size, sourceHeight, this.xPos, this.yPos, this.typeConfig.width * this.size, this.typeConfig.height); }, /** * Obstacle frame update. * @param {number} deltaTime * @param {number} speed */ update: function (deltaTime, speed) { if (!this.remove) { if (this.typeConfig.speedOffset) { speed += this.speedOffset; } this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime); // Update frame if (this.typeConfig.numFrames) { this.timer += deltaTime; if (this.timer >= this.typeConfig.frameRate) { this.currentFrame = this.currentFrame == this.typeConfig.numFrames - 1 ? 0 : this.currentFrame + 1; this.timer = 0; } } this.draw(); if (!this.isVisible()) { this.remove = true; } } }, /** * Calculate a random gap size. * - Minimum gap gets wider as speed increses * @param {number} gapCoefficient * @param {number} speed * @return {number} The gap size. */ getGap: function (gapCoefficient, speed) { var minGap = Math.round(this.width * speed + this.typeConfig.minGap * gapCoefficient); var maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT); return getRandomNum(minGap, maxGap); }, /** * Check if obstacle is visible. * @return {boolean} Whether the obstacle is in the game area. */ isVisible: function () { return this.xPos + this.width > 0; }, /** * Make a copy of the collision boxes, since these will change based on * obstacle type and size. */ cloneCollisionBoxes: function () { var collisionBoxes = this.typeConfig.collisionBoxes; for (var i = collisionBoxes.length - 1; i >= 0; i--) { this.collisionBoxes[i] = new CollisionBox(collisionBoxes[i].x, collisionBoxes[i].y, collisionBoxes[i].width, collisionBoxes[i].height); } } }; /** * Obstacle definitions. * minGap: minimum pixel space betweeen obstacles. * multipleSpeed: Speed at which multiples are allowed. * speedOffset: speed faster / slower than the horizon. * minSpeed: Minimum speed which the obstacle can make an appearance. */ Obstacle.types = [ { type: 'CACTUS_SMALL', width: 17, height: 35, yPos: 105, multipleSpeed: 4, minGap: 120, minSpeed: 0, collisionBoxes: [ new CollisionBox(0, 7, 5, 27), new CollisionBox(4, 0, 6, 34), new CollisionBox(10, 4, 7, 14) ] }, { type: 'CACTUS_LARGE', width: 25, height: 50, yPos: 90, multipleSpeed: 7, minGap: 120, minSpeed: 0, collisionBoxes: [ new CollisionBox(0, 12, 7, 38), new CollisionBox(8, 0, 7, 49), new CollisionBox(13, 10, 10, 38) ] }, { type: 'PTERODACTYL', width: 46, height: 40, yPos: [100, 75, 50], // Variable height. yPosMobile: [100, 50], // Variable height mobile. multipleSpeed: 999, minSpeed: 8.5, minGap: 150, collisionBoxes: [ new CollisionBox(15, 15, 16, 5), new CollisionBox(18, 21, 24, 6), new CollisionBox(2, 14, 4, 3), new CollisionBox(6, 10, 4, 7), new CollisionBox(10, 8, 6, 9) ], numFrames: 2, frameRate: 1000 / 6, speedOffset: .8 } ]; //****************************************************************************** /** * T-rex game character. * @param {HTMLCanvas} canvas * @param {Object} spritePos Positioning within image sprite. * @constructor */ function Trex(canvas, spritePos) { this.canvas = canvas; this.canvasCtx = canvas.getContext('2d'); this.spritePos = spritePos; this.xPos = 0; this.yPos = 0; // Position when on the ground. this.groundYPos = 0; this.currentFrame = 0; this.currentAnimFrames = []; this.blinkDelay = 0; this.blinkCount = 0; this.animStartTime = 0; this.timer = 0; this.msPerFrame = 1000 / FPS; this.config = Trex.config; // Current status. this.status = Trex.status.WAITING; this.jumping = false; this.ducking = false; this.jumpVelocity = 0; this.reachedMinHeight = false; this.speedDrop = false; this.jumpCount = 0; this.jumpspotX = 0; this.init(); }; /** * T-rex player config. * @enum {number} */ Trex.config = { DROP_VELOCITY: -5, GRAVITY: 0.6, HEIGHT: 47, HEIGHT_DUCK: 25, INIITAL_JUMP_VELOCITY: -10, INTRO_DURATION: 1500, MAX_JUMP_HEIGHT: 30, MIN_JUMP_HEIGHT: 30, SPEED_DROP_COEFFICIENT: 3, SPRITE_WIDTH: 262, START_X_POS: 50, WIDTH: 44, WIDTH_DUCK: 59 }; /** * Used in collision detection. * @type {Array} */ Trex.collisionBoxes = { DUCKING: [ new CollisionBox(1, 18, 55, 25) ], RUNNING: [ new CollisionBox(22, 0, 17, 16), new CollisionBox(1, 18, 30, 9), new CollisionBox(10, 35, 14, 8), new CollisionBox(1, 24, 29, 5), new CollisionBox(5, 30, 21, 4), new CollisionBox(9, 34, 15, 4) ] }; /** * Animation states. * @enum {string} */ Trex.status = { CRASHED: 'CRASHED', DUCKING: 'DUCKING', JUMPING: 'JUMPING', RUNNING: 'RUNNING', WAITING: 'WAITING' }; /** * Blinking coefficient. * @const */ Trex.BLINK_TIMING = 7000; /** * Animation config for different states. * @enum {Object} */ Trex.animFrames = { WAITING: { frames: [44, 0], msPerFrame: 1000 / 3 }, RUNNING: { frames: [88, 132], msPerFrame: 1000 / 12 }, CRASHED: { frames: [220], msPerFrame: 1000 / 60 }, JUMPING: { frames: [0], msPerFrame: 1000 / 60 }, DUCKING: { frames: [264, 323], msPerFrame: 1000 / 8 } }; Trex.prototype = { /** * T-rex player initaliser. * Sets the t-rex to blink at random intervals. */ init: function () { this.groundYPos = Runner.defaultDimensions.HEIGHT - this.config.HEIGHT - Runner.config.BOTTOM_PAD; this.yPos = this.groundYPos; this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT; this.draw(0, 0); this.update(0, Trex.status.WAITING); }, /** * Setter for the jump velocity. * The approriate drop velocity is also set. */ setJumpVelocity: function (setting) { this.config.INIITAL_JUMP_VELOCITY = -setting; this.config.DROP_VELOCITY = -setting / 2; }, /** * Set the animation status. * @param {!number} deltaTime * @param {Trex.status} status Optional status to switch to. */ update: function (deltaTime, opt_status) { this.timer += deltaTime; // Update the status. if (opt_status) { this.status = opt_status; this.currentFrame = 0; this.msPerFrame = Trex.animFrames[opt_status].msPerFrame; this.currentAnimFrames = Trex.animFrames[opt_status].frames; if (opt_status == Trex.status.WAITING) { this.animStartTime = getTimeStamp(); this.setBlinkDelay(); } } // Game intro animation, T-rex moves in from the left. if (this.playingIntro && this.xPos < this.config.START_X_POS) { this.xPos += Math.round((this.config.START_X_POS / this.config.INTRO_DURATION) * deltaTime); } if (this.status == Trex.status.WAITING) { this.blink(getTimeStamp()); } else { this.draw(this.currentAnimFrames[this.currentFrame], 0); } // Update the frame position. if (this.timer >= this.msPerFrame) { this.currentFrame = this.currentFrame == this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1; this.timer = 0; } // Speed drop becomes duck if the down key is still being pressed. if (this.speedDrop && this.yPos == this.groundYPos) { this.speedDrop = false; this.setDuck(true); } }, /** * Draw the t-rex to a particular position. * @param {number} x * @param {number} y */ draw: function (x, y) { var sourceX = x; var sourceY = y; var sourceWidth = this.ducking && this.status != Trex.status.CRASHED ? this.config.WIDTH_DUCK : this.config.WIDTH; var sourceHeight = this.config.HEIGHT; if (IS_HIDPI) { sourceX *= 2; sourceY *= 2; sourceWidth *= 2; sourceHeight *= 2; } // Adjustments for sprite sheet position. sourceX += this.spritePos.x; sourceY += this.spritePos.y; // Ducking. if (this.ducking && this.status != Trex.status.CRASHED) { this.canvasCtx.drawImage(Runner.imageSprite, sourceX, sourceY, sourceWidth, sourceHeight, this.xPos, this.yPos, this.config.WIDTH_DUCK, this.config.HEIGHT); } else { // Crashed whilst ducking. Trex is standing up so needs adjustment. if (this.ducking && this.status == Trex.status.CRASHED) { this.xPos++; } // Standing / running this.canvasCtx.drawImage(Runner.imageSprite, sourceX, sourceY, sourceWidth, sourceHeight, this.xPos, this.yPos, this.config.WIDTH, this.config.HEIGHT); } }, /** * Sets a random time for the blink to happen. */ setBlinkDelay: function () { this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING); }, /** * Make t-rex blink at random intervals. * @param {number} time Current time in milliseconds. */ blink: function (time) { var deltaTime = time - this.animStartTime; if (deltaTime >= this.blinkDelay) { this.draw(this.currentAnimFrames[this.currentFrame], 0); if (this.currentFrame == 1) { // Set new random delay to blink. this.setBlinkDelay(); this.animStartTime = time; this.blinkCount++; } } }, /** * Initialise a jump. * @param {number} speed */ startJump: function (speed) { if (!this.jumping) { this.update(0, Trex.status.JUMPING); // Tweak the jump velocity based on the speed. this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY - (speed / 10); this.jumping = true; this.reachedMinHeight = false; this.speedDrop = false; } }, /** * Jump is complete, falling down. */ endJump: function () { if (this.reachedMinHeight && this.jumpVelocity < this.config.DROP_VELOCITY) { this.jumpVelocity = this.config.DROP_VELOCITY; } }, /** * Update frame for a jump. * @param {number} deltaTime * @param {number} speed */ updateJump: function (deltaTime, speed) { var msPerFrame = Trex.animFrames[this.status].msPerFrame; var framesElapsed = deltaTime / msPerFrame; // Speed drop makes Trex fall faster. if (this.speedDrop) { this.yPos += Math.round(this.jumpVelocity * this.config.SPEED_DROP_COEFFICIENT * framesElapsed); } else { this.yPos += Math.round(this.jumpVelocity * framesElapsed); } this.jumpVelocity += this.config.GRAVITY * framesElapsed; // Minimum height has been reached. if (this.yPos < this.minJumpHeight || this.speedDrop) { this.reachedMinHeight = true; } // Reached max height if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) { this.endJump(); } // Back down at ground level. Jump completed. if (this.yPos > this.groundYPos) { this.reset(); this.jumpCount++; } this.update(deltaTime); }, /** * Set the speed drop. Immediately cancels the current jump. */ setSpeedDrop: function () { this.speedDrop = true; this.jumpVelocity = 1; }, /** * @param {boolean} isDucking. */ setDuck: function (isDucking) { if (isDucking && this.status != Trex.status.DUCKING) { this.update(0, Trex.status.DUCKING); this.ducking = true; } else if (this.status == Trex.status.DUCKING) { this.update(0, Trex.status.RUNNING); this.ducking = false; } }, /** * Reset the t-rex to running at start of game. */ reset: function () { this.yPos = this.groundYPos; this.jumpVelocity = 0; this.jumping = false; this.ducking = false; this.update(0, Trex.status.RUNNING); this.midair = false; this.speedDrop = false; this.jumpCount = 0; } }; //****************************************************************************** /** * Handles displaying the distance meter. * @param {!HTMLCanvasElement} canvas * @param {Object} spritePos Image position in sprite. * @param {number} canvasWidth * @constructor */ function DistanceMeter(canvas, spritePos, canvasWidth) { this.canvas = canvas; this.canvasCtx = canvas.getContext('2d'); this.image = Runner.imageSprite; this.spritePos = spritePos; this.x = 0; this.y = 5; this.currentDistance = 0; this.maxScore = 0; this.highScore = 0; this.container = null; this.digits = []; this.acheivement = false; this.defaultString = ''; this.flashTimer = 0; this.flashIterations = 0; this.invertTrigger = false; this.config = DistanceMeter.config; this.maxScoreUnits = this.config.MAX_DISTANCE_UNITS; this.init(canvasWidth); }; /** * @enum {number} */ DistanceMeter.dimensions = { WIDTH: 10, HEIGHT: 13, DEST_WIDTH: 11 }; /** * Y positioning of the digits in the sprite sheet. * X position is always 0. * @type {Array} */ DistanceMeter.yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120]; /** * Distance meter config. * @enum {number} */ DistanceMeter.config = { // Number of digits. MAX_DISTANCE_UNITS: 5, // Distance that causes achievement animation. ACHIEVEMENT_DISTANCE: 100, // Used for conversion from pixel distance to a scaled unit. COEFFICIENT: 0.025, // Flash duration in milliseconds. FLASH_DURATION: 1000 / 4, // Flash iterations for achievement animation. FLASH_ITERATIONS: 3 }; DistanceMeter.prototype = { /** * Initialise the distance meter to '00000'. * @param {number} width Canvas width in px. */ init: function (width) { var maxDistanceStr = ''; this.calcXPos(width); this.maxScore = this.maxScoreUnits; for (var i = 0; i < this.maxScoreUnits; i++) { this.draw(i, 0); this.defaultString += '0'; maxDistanceStr += '9'; } this.maxScore = parseInt(maxDistanceStr); }, /** * Calculate the xPos in the canvas. * @param {number} canvasWidth */ calcXPos: function (canvasWidth) { this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH * (this.maxScoreUnits + 1)); }, /** * Draw a digit to canvas. * @param {number} digitPos Position of the digit. * @param {number} value Digit value 0-9. * @param {boolean} opt_highScore Whether drawing the high score. */ draw: function (digitPos, value, opt_highScore) { var sourceWidth = DistanceMeter.dimensions.WIDTH; var sourceHeight = DistanceMeter.dimensions.HEIGHT; var sourceX = DistanceMeter.dimensions.WIDTH * value; var sourceY = 0; var targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH; var targetY = this.y; var targetWidth = DistanceMeter.dimensions.WIDTH; var targetHeight = DistanceMeter.dimensions.HEIGHT; // For high DPI we 2x source values. if (IS_HIDPI) { sourceWidth *= 2; sourceHeight *= 2; sourceX *= 2; } sourceX += this.spritePos.x; sourceY += this.spritePos.y; this.canvasCtx.save(); if (opt_highScore) { // Left of the current score. var highScoreX = this.x - (this.maxScoreUnits * 2) * DistanceMeter.dimensions.WIDTH; this.canvasCtx.translate(highScoreX, this.y); } else { this.canvasCtx.translate(this.x, this.y); } this.canvasCtx.drawImage(this.image, sourceX, sourceY, sourceWidth, sourceHeight, targetX, targetY, targetWidth, targetHeight ); this.canvasCtx.restore(); }, /** * Covert pixel distance to a 'real' distance. * @param {number} distance Pixel distance ran. * @return {number} The 'real' distance ran. */ getActualDistance: function (distance) { return distance ? Math.round(distance * this.config.COEFFICIENT) : 0; }, /** * Update the distance meter. * @param {number} distance * @param {number} deltaTime * @return {boolean} Whether the acheivement sound fx should be played. */ update: function (deltaTime, distance) { var paint = true; var playSound = false; if (!this.acheivement) { distance = this.getActualDistance(distance); // Score has gone beyond the initial digit count. if (distance > this.maxScore && this.maxScoreUnits == this.config.MAX_DISTANCE_UNITS) { this.maxScoreUnits++; this.maxScore = parseInt(this.maxScore + '9'); } else { this.distance = 0; } if (distance > 0) { // Acheivement unlocked if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) { // Flash score and play sound. this.acheivement = true; this.flashTimer = 0; playSound = true; } // Create a string representation of the distance with leading 0. var distanceStr = (this.defaultString + distance).substr(-this.maxScoreUnits); this.digits = distanceStr.split(''); } else { this.digits = this.defaultString.split(''); } } else { // Control flashing of the score on reaching acheivement. if (this.flashIterations = 0; i--) { this.draw(i, parseInt(this.digits[i])); } } this.drawHighScore(); return playSound; }, /** * Draw the high score. */ drawHighScore: function () { this.canvasCtx.save(); this.canvasCtx.globalAlpha = .8; for (var i = this.highScore.length - 1; i >= 0; i--) { this.draw(i, parseInt(this.highScore[i], 10), true); } this.canvasCtx.restore(); }, /** * Set the highscore as a array string. * Position of char in the sprite: H - 10, I - 11. * @param {number} distance Distance ran in pixels. */ setHighScore: function (distance) { distance = this.getActualDistance(distance); var highScoreStr = (this.defaultString + distance).substr(-this.maxScoreUnits); this.highScore = ['10', '11', ''].concat(highScoreStr.split('')); }, /** * Reset the distance meter back to '00000'. */ reset: function () { this.update(0); this.acheivement = false; } }; //****************************************************************************** /** * Cloud background item. * Similar to an obstacle object but without collision boxes. * @param {HTMLCanvasElement} canvas Canvas element. * @param {Object} spritePos Position of image in sprite. * @param {number} containerWidth */ function Cloud(canvas, spritePos, containerWidth) { this.canvas = canvas; this.canvasCtx = this.canvas.getContext('2d'); this.spritePos = spritePos; this.containerWidth = containerWidth; this.xPos = containerWidth; this.yPos = 0; this.remove = false; this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP, Cloud.config.MAX_CLOUD_GAP); this.init(); }; /** * Cloud object config. * @enum {number} */ Cloud.config = { HEIGHT: 14, MAX_CLOUD_GAP: 400, MAX_SKY_LEVEL: 30, MIN_CLOUD_GAP: 100, MIN_SKY_LEVEL: 71, WIDTH: 46 }; Cloud.prototype = { /** * Initialise the cloud. Sets the Cloud height. */ init: function () { this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL, Cloud.config.MIN_SKY_LEVEL); this.draw(); }, /** * Draw the cloud. */ draw: function () { this.canvasCtx.save(); var sourceWidth = Cloud.config.WIDTH; var sourceHeight = Cloud.config.HEIGHT; if (IS_HIDPI) { sourceWidth = sourceWidth * 2; sourceHeight = sourceHeight * 2; } this.canvasCtx.drawImage(Runner.imageSprite, this.spritePos.x, this.spritePos.y, sourceWidth, sourceHeight, this.xPos, this.yPos, Cloud.config.WIDTH, Cloud.config.HEIGHT); this.canvasCtx.restore(); }, /** * Update the cloud position. * @param {number} speed */ update: function (speed) { if (!this.remove) { this.xPos -= Math.ceil(speed); this.draw(); // Mark as removeable if no longer in the canvas. if (!this.isVisible()) { this.remove = true; } } }, /** * Check if the cloud is visible on the stage. * @return {boolean} */ isVisible: function () { return this.xPos + Cloud.config.WIDTH > 0; } }; //****************************************************************************** /** * Nightmode shows a moon and stars on the horizon. */ function NightMode(canvas, spritePos, containerWidth) { this.spritePos = spritePos; this.canvas = canvas; this.canvasCtx = canvas.getContext('2d'); this.xPos = containerWidth - 50; this.yPos = 30; this.currentPhase = 0; this.opacity = 0; this.containerWidth = containerWidth; this.stars = []; this.drawStars = false; this.placeStars(); }; /** * @enum {number} */ NightMode.config = { FADE_SPEED: 0.035, HEIGHT: 40, MOON_SPEED: 0.25, NUM_STARS: 2, STAR_SIZE: 9, STAR_SPEED: 0.3, STAR_MAX_Y: 70, WIDTH: 20 }; NightMode.phases = [140, 120, 100, 60, 40, 20, 0]; NightMode.prototype = { /** * Update moving moon, changing phases. * @param {boolean} activated Whether night mode is activated. * @param {number} delta */ update: function (activated, delta) { // Moon phase. if (activated && this.opacity == 0) { this.currentPhase++; if (this.currentPhase >= NightMode.phases.length) { this.currentPhase = 0; } } // Fade in / out. if (activated && (this.opacity < 1 || this.opacity == 0)) { this.opacity += NightMode.config.FADE_SPEED; } else if (this.opacity > 0) { this.opacity -= NightMode.config.FADE_SPEED; } // Set moon positioning. if (this.opacity > 0) { this.xPos = this.updateXPos(this.xPos, NightMode.config.MOON_SPEED); // Update stars. if (this.drawStars) { for (var i = 0; i < NightMode.config.NUM_STARS; i++) { this.stars[i].x = this.updateXPos(this.stars[i].x, NightMode.config.STAR_SPEED); } } this.draw(); } else { this.opacity = 0; this.placeStars(); } this.drawStars = true; }, updateXPos: function (currentPos, speed) { if (currentPos < -NightMode.config.WIDTH) { currentPos = this.containerWidth; } else { currentPos -= speed; } return currentPos; }, draw: function () { var moonSourceWidth = this.currentPhase == 3 ? NightMode.config.WIDTH * 2 : NightMode.config.WIDTH; var moonSourceHeight = NightMode.config.HEIGHT; var moonSourceX = this.spritePos.x + NightMode.phases[this.currentPhase]; var moonOutputWidth = moonSourceWidth; var starSize = NightMode.config.STAR_SIZE; var starSourceX = Runner.spriteDefinition.LDPI.STAR.x; if (IS_HIDPI) { moonSourceWidth *= 2; moonSourceHeight *= 2; moonSourceX = this.spritePos.x + (NightMode.phases[this.currentPhase] * 2); starSize *= 2; starSourceX = Runner.spriteDefinition.HDPI.STAR.x; } this.canvasCtx.save(); this.canvasCtx.globalAlpha = this.opacity; // Stars. if (this.drawStars) { for (var i = 0; i < NightMode.config.NUM_STARS; i++) { this.canvasCtx.drawImage(Runner.imageSprite, starSourceX, this.stars[i].sourceY, starSize, starSize, Math.round(this.stars[i].x), this.stars[i].y, NightMode.config.STAR_SIZE, NightMode.config.STAR_SIZE); } } // Moon. this.canvasCtx.drawImage(Runner.imageSprite, moonSourceX, this.spritePos.y, moonSourceWidth, moonSourceHeight, Math.round(this.xPos), this.yPos, moonOutputWidth, NightMode.config.HEIGHT); this.canvasCtx.globalAlpha = 1; this.canvasCtx.restore(); }, // Do star placement. placeStars: function () { var segmentSize = Math.round(this.containerWidth / NightMode.config.NUM_STARS); for (var i = 0; i < NightMode.config.NUM_STARS; i++) { this.stars[i] = {}; this.stars[i].x = getRandomNum(segmentSize * i, segmentSize * (i + 1)); this.stars[i].y = getRandomNum(0, NightMode.config.STAR_MAX_Y); if (IS_HIDPI) { this.stars[i].sourceY = Runner.spriteDefinition.HDPI.STAR.y + NightMode.config.STAR_SIZE * 2 * i; } else { this.stars[i].sourceY = Runner.spriteDefinition.LDPI.STAR.y + NightMode.config.STAR_SIZE * i; } } }, reset: function () { this.currentPhase = 0; this.opacity = 0; this.update(false); } }; //****************************************************************************** /** * Horizon Line. * Consists of two connecting lines. Randomly assigns a flat / bumpy horizon. * @param {HTMLCanvasElement} canvas * @param {Object} spritePos Horizon position in sprite. * @constructor */ function HorizonLine(canvas, spritePos) { this.spritePos = spritePos; this.canvas = canvas; this.canvasCtx = canvas.getContext('2d'); this.sourceDimensions = {}; this.dimensions = HorizonLine.dimensions; this.sourceXPos = [this.spritePos.x, this.spritePos.x + this.dimensions.WIDTH]; this.xPos = []; this.yPos = 0; this.bumpThreshold = 0.5; this.setSourceDimensions(); this.draw(); }; /** * Horizon line dimensions. * @enum {number} */ HorizonLine.dimensions = { WIDTH: 600, HEIGHT: 12, YPOS: 127 }; HorizonLine.prototype = { /** * Set the source dimensions of the horizon line. */ setSourceDimensions: function () { for (var dimension in HorizonLine.dimensions) { if (IS_HIDPI) { if (dimension != 'YPOS') { this.sourceDimensions[dimension] = HorizonLine.dimensions[dimension] * 2; } } else { this.sourceDimensions[dimension] = HorizonLine.dimensions[dimension]; } this.dimensions[dimension] = HorizonLine.dimensions[dimension]; } this.xPos = [0, HorizonLine.dimensions.WIDTH]; this.yPos = HorizonLine.dimensions.YPOS; }, /** * Return the crop x position of a type. */ getRandomType: function () { return Math.random() > this.bumpThreshold ? this.dimensions.WIDTH : 0; }, /** * Draw the horizon line. */ draw: function () { this.canvasCtx.drawImage(Runner.imageSprite, this.sourceXPos[0], this.spritePos.y, this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT, this.xPos[0], this.yPos, this.dimensions.WIDTH, this.dimensions.HEIGHT); this.canvasCtx.drawImage(Runner.imageSprite, this.sourceXPos[1], this.spritePos.y, this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT, this.xPos[1], this.yPos, this.dimensions.WIDTH, this.dimensions.HEIGHT); }, /** * Update the x position of an indivdual piece of the line. * @param {number} pos Line position. * @param {number} increment */ updateXPos: function (pos, increment) { var line1 = pos; var line2 = pos == 0 ? 1 : 0; this.xPos[line1] -= increment; this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH; if (this.xPos[line1] Math.random()) { this.addCloud(); } // Remove expired clouds. this.clouds = this.clouds.filter(function (obj) { return !obj.remove; }); } else { this.addCloud(); } }, /** * Update the obstacle positions. * @param {number} deltaTime * @param {number} currentSpeed */ updateObstacles: function (deltaTime, currentSpeed) { // Obstacles, move to Horizon layer. var updatedObstacles = this.obstacles.slice(0); for (var i = 0; i < this.obstacles.length; i++) { var obstacle = this.obstacles[i]; obstacle.update(deltaTime, currentSpeed); // Clean up existing obstacles. if (obstacle.remove) { updatedObstacles.shift(); } } this.obstacles = updatedObstacles; if (this.obstacles.length > 0) { var lastObstacle = this.obstacles[this.obstacles.length - 1]; if (lastObstacle && !lastObstacle.followingObstacleCreated && lastObstacle.isVisible() && (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) < this.dimensions.WIDTH) { this.addNewObstacle(currentSpeed); lastObstacle.followingObstacleCreated = true; } } else { // Create new obstacles. this.addNewObstacle(currentSpeed); } }, removeFirstObstacle: function () { this.obstacles.shift(); }, /** * Add a new obstacle. * @param {number} currentSpeed */ addNewObstacle: function (currentSpeed) { var obstacleTypeIndex = getRandomNum(0, Obstacle.types.length - 1); var obstacleType = Obstacle.types[obstacleTypeIndex]; // Check for multiples of the same type of obstacle. // Also check obstacle is available at current speed. if (this.duplicateObstacleCheck(obstacleType.type) || currentSpeed < obstacleType.minSpeed) { this.addNewObstacle(currentSpeed); } else { var obstacleSpritePos = this.spritePos[obstacleType.type]; this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType, obstacleSpritePos, this.dimensions, this.gapCoefficient, currentSpeed, obstacleType.width)); this.obstacleHistory.unshift(obstacleType.type); if (this.obstacleHistory.length > 1) { this.obstacleHistory.splice(Runner.config.MAX_OBSTACLE_DUPLICATION); } } }, /** * Returns whether the previous two obstacles are the same as the next one. * Maximum duplication is set in config value MAX_OBSTACLE_DUPLICATION. * @return {boolean} */ duplicateObstacleCheck: function (nextObstacleType) { var duplicateCount = 0; for (var i = 0; i < this.obstacleHistory.length; i++) { duplicateCount = this.obstacleHistory[i] == nextObstacleType ? duplicateCount + 1 : 0; } return duplicateCount >= Runner.config.MAX_OBSTACLE_DUPLICATION; }, /** * Reset the horizon layer. * Remove existing obstacles and reposition the horizon line. */ reset: function () { this.obstacles = []; this.horizonLine.reset(); this.nightMode.reset(); }, /** * Update the canvas width and scaling. * @param {number} width Canvas width. * @param {number} height Canvas height. */ resize: function (width, height) { this.canvas.width = width; this.canvas.height = height; }, /** * Add a new cloud to the horizon. */ addCloud: function () { this.clouds.push(new Cloud(this.canvas, this.spritePos.CLOUD, this.dimensions.WIDTH)); } }; })(); function onDocumentLoad() { new Runner('.interstitial-wrapper'); } document.addEventListener('DOMContentLoaded', onDocumentLoad);"}],"posts":[{"title":"API","slug":"api","date":"2021-03-03T10:14:12.000Z","updated":"2021-03-03T10:17:21.768Z","comments":true,"path":"posts/11642/","link":"","permalink":"https://blog.imsyy.top/posts/11642/","excerpt":"","text":"https://glitch.com/https://app.netlify.com/https://vercel.com/https://www.leancloud.cn/https://www.heroku.com/","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"网盘","slug":"网盘","permalink":"https://blog.imsyy.top/tags/%E7%BD%91%E7%9B%98/"},{"name":"OneDrive","slug":"OneDrive","permalink":"https://blog.imsyy.top/tags/OneDrive/"},{"name":"OneManager","slug":"OneManager","permalink":"https://blog.imsyy.top/tags/OneManager/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://blog.imsyy.top/tags/Cloudflare/"},{"name":"Heroku","slug":"Heroku","permalink":"https://blog.imsyy.top/tags/Heroku/"},{"name":"教程","slug":"教程","permalink":"https://blog.imsyy.top/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"基于 OneManager-php 搭建一个免费的 OneDrive 分享站","slug":"基于 OneManager-php 搭建一个免费的文件分享站","date":"2021-02-24T08:56:56.000Z","updated":"2021-02-27T03:45:44.172Z","comments":true,"path":"posts/17770/","link":"","permalink":"https://blog.imsyy.top/posts/17770/","excerpt":"","text":"阿里的服务器到期了，也没钱再续，于是原来的网盘系统 Cloudreve 就废弃了。由于原来的后端储存使用的是微软的 OneDrive，便想着再找一个无需主机就能实现 OneDrive 文件共享的程序，本来想使用 Oneindex 的，但是原作者已经删库了，并且已经多年未更新了，只好放弃。不过最近在逛 GitHub 的时候，偶然发现了 OneManager-php 这个只需要 Heroku 便能部署运行的程序，于是便试着搞一搞。 程序界面主界面 文件列表 無名の资源库https://pan.imsyy.top/ 前期准备OneDrive 账号需要准备一个 OneDrive 账号，最好储存为 5T 大小的那种。这方面的教程百度上一搜一大把，这里不做过多阐述，我这里使用的是 Microsoft 365 E5 开发者账号。当然个人版账号也是可以的，只是空间通常仅为 15G 注册 HerokuHeroku 账号注册https://signup.heroku.com/ 注意： 注册时最好注册两个账号，因为 Heroku 免费套餐每月只能运行 550 小时，两个账号可实现全月不间断运行 注册时可能需要使用代理访问，否则无法通过谷歌人机验证注意人机验证 注册 CloudflareCloudflare 账号注册https://dash.cloudflare.com/sign-up Cloudflare 账号这玩意应该是人手一个了，就不细说了 程序部署Heroku 端部署 前往 OneManager-php 项目的 GitHub 仓库并 Fork（ 这里的 Fork 并非强制性要求 ） OneManager-phphttps://github.com/qkqpttgf/OneManager-php 点击 Readme.md 中的 Deploy to Heroku 按钮 跳转到 Heroku 后在 App name 栏中输入程序名称 这里输入的内容即为将部署程序的子域名前缀 输入完成后点击 Deploy app 部署成功后点击 View 跳转到安装页面点击开始安装 选择简体中文再点击新建 API Key 点击 Reveal 后复制 API Key 再输入后台管理密码 必须输入，否则后期无法进入后台 确认后进入主页面左上角进入后台添加盘 输入标签及显示名称 选择你的 OneDrive 对应的版本 各种 A1，A1P，E3，E5 均为国际版 点击确认后跳转至微软账号登陆界面 登录成功后如图所示 程序默认主界面 Cloudflare 端部署其实到此为止程序已经部署成功了，已经可以访问 Heroku 为你分配的域名来访问了，但是要想实现 24 小时不间断访问，则需要再注册一个 Heroku 账号并执行上述操作，并确保两个网址的内容一致，然后借助 Cloudflare Workers 来实现 进入 Workers 在脚本输入框中粘贴以下内容并将两个 Heroku 账号中程序部署的网址填入下方单双日 该代码来自 大鸟博客 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// 单日const SingleDay = &#x27;第一个网址&#x27;// 双日const DoubleDay = &#x27;第二个网址&#x27;// 一切给CF代理，true/falseconst CFproxy = true // 由于heroku不绑卡不能自定义域名，就算绑卡后https也不方便// 另外免费套餐每月550小时，有些人不够用// 于是在CF Workers使用此代码，分单双日拉取不同heroku帐号下的相同网页// 只改上面，下面不用动 addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; let nd = new Date(); if (nd.getDate()%2) &#123; host = SingleDay &#125; else &#123; host = DoubleDay &#125; if (!CFproxy) &#123; let url=new URL(event.request.url); if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); event.respondWith( response ); &#125; else &#123; url.hostname=host; let request=new Request(url,event.request); event.respondWith( fetch(request) ) &#125; &#125; else &#123; event.respondWith( fetchAndApply(event.request) ); &#125;&#125;) async function fetchAndApply(request) &#123; let response = null; let url = new URL(request.url); if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; url.host = host; let method = request.method; let body = request.body; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, url.host); new_request_headers.set(&#x27;Referer&#x27;, request.url); let original_response = await fetch(url.href, &#123; method: method, body: body, headers: new_request_headers &#125;); response = new Response(original_response.body, &#123; status: original_response.status, headers: original_response.headers &#125;) return response;&#125; 填写完成后点击保存并部署即可看到 Cloudflare 给你提供的子域 至此教程完成 其他方面程序美化程序默认主题的界面实在是不太美观，这里建议点击右下角来选择你认为合适的主题我选择的是 renexmoe 主题，并对这个主题做出了一些修改。若你也想自定义主题或开发一套新主题，则需要前文提到的 Fork 该仓库，并将 Heroku 部署源改为你的仓库 将 Heroku 连接至 GitHub 当修改完成并推送至 GitHub 后即可点击 Deploy Branch 按钮更新程序部署 自定义域名觉着没有这个必要tailan，我就没有弄。实在想自定义域名的朋友们可参考下面这篇文章 CloudFlare Workers 设置使用自己的域名https://vircloud.net/exp/cf-worker-domain.html","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"网盘","slug":"网盘","permalink":"https://blog.imsyy.top/tags/%E7%BD%91%E7%9B%98/"},{"name":"OneDrive","slug":"OneDrive","permalink":"https://blog.imsyy.top/tags/OneDrive/"},{"name":"OneManager","slug":"OneManager","permalink":"https://blog.imsyy.top/tags/OneManager/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://blog.imsyy.top/tags/Cloudflare/"},{"name":"Heroku","slug":"Heroku","permalink":"https://blog.imsyy.top/tags/Heroku/"},{"name":"教程","slug":"教程","permalink":"https://blog.imsyy.top/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"使用 Git 方式上传文件至代码仓库","slug":"使用 Git 方式上传文件至代码仓库","date":"2021-01-17T03:16:33.000Z","updated":"2021-03-03T09:19:40.656Z","comments":true,"path":"posts/43167/","link":"","permalink":"https://blog.imsyy.top/posts/43167/","excerpt":"","text":"为了演示方便，以下操作均使用 Github ，其他仓库操作过程大同小异 说明无论是部署 Hexo 还是从本地推送至代码仓库，我们都会用到 Git 命令来进行上传操作，下面就来讲讲如何使用 Git 命令来上传文件至代码仓库 创建仓库无论是 Github 还是 Gitee，上传文件前都要创建相应的仓库（ New repository ） GitHub 新建仓库 Gitee 新建仓库 操作过程打开 Git bash 安装 git Git Downloadhttps://git-scm.com/downloads/ 在需要上传的本地文件夹内右键打开 Git bash 右键打开 Git bash git init输入 git init 指令，把该文件夹作为 本地仓库 创建本地仓库 git add .输入 git add . 指令，添加该文件夹下的所有文件到本地仓库。add 后面的 . 表示添加所有文件，如果想要添加个别文件可以把 . 替换为相应文件名 添加所有文件 git commit -m “注释”输入 git commit -m &quot;first commit&quot; 指令，git commit -m 作用为 提交暂存区的文件（ 也就是上一步添加的文件 ），后面双引号内可以填写关于提交的注释信息 提交暂存区文件 git remote add origin 仓库地址输入 git remote add origin 远程仓库地址 指令，建立本地仓库与远程仓库的关联，指令后面的地址为 代码仓库上原有的目标仓库或刚创建的仓库的地址 Github 仓库地址 建立本地仓库与远程仓库的关联 git pull –rebase origin 分支名称输入 git pull --rebase origin master 指令，将远程仓库的内容合并到本地仓库。如果远程仓库为空可以跳过这一步，如果远程仓库不为空，则必须进行这一步 其中的 master 为你要推送至仓库的分支名称，通常情况下为 master 仓库不为空时必须输入指令 git push -u origin 分支名称输入 git push -u origin master 指令，将本地仓库的文件推送到已经建立关联的远程仓库 master 分支 其中的 master 为你要推送至仓库的分支名称，通常情况下为 master 推送文件命令 执行命令后就可以在远程仓库中看到已上传的本地文件 Github 仓库文件 本地仓库文件 如果远程仓库不为空，且没有执行 git pull --rebase origin master 命令，则可能会发生报错 git status最后可以输入 git status 指令查看本地仓库的状态，本步也可以省略 查看本地仓库状态 指令总结若本地仓库与远程仓库已有关联，之后推送该文件夹内的文件只需要输入以下指令即可 123git add . # 添加该文件夹下的所有文件到本地仓库git commit -m &quot;first commit&quot; # 提交暂存区文件并注释git push -u origin master # 本地仓库推送到代码仓库的 master 分支 若推送至新的远程仓库，则需要按顺序执行所有指令 123456git init # 在该文件夹中创建本地仓库git add . # 添加该文件夹下的所有文件到本地仓库git commit -m &quot;first commit&quot; # 提交暂存区文件并注释git remote add origin 仓库地址 # 建立本地仓库与远程仓库的关联git pull --rebase origin master # 将远程仓库的内容合并到本地仓库的 master 分支git push -u origin master # 本地仓库推送到代码仓库的 master 分支 若需强制覆盖远程仓库，则可执行以下命令（ 若非必要，还请谨慎使用 ） 1234git add . # 添加该文件夹下的所有文件到本地仓库git commit -m &quot;first commit&quot; # 提交暂存区文件并注释git remote add origin 仓库地址 # 建立本地仓库与远程仓库的关联git push -f origin master #强制用本地代码覆盖远程仓库的 master 分支","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://blog.imsyy.top/tags/%E6%95%99%E7%A8%8B/"},{"name":"Git","slug":"Git","permalink":"https://blog.imsyy.top/tags/Git/"},{"name":"Github","slug":"Github","permalink":"https://blog.imsyy.top/tags/Github/"},{"name":"Gitee","slug":"Gitee","permalink":"https://blog.imsyy.top/tags/Gitee/"}]},{"title":"Markdown 使用指南 - 扩展语法","slug":"Markdown 使用指南 - 扩展语法","date":"2021-01-02T10:31:14.000Z","updated":"2021-02-07T04:57:30.096Z","comments":true,"path":"posts/18426/","link":"","permalink":"https://blog.imsyy.top/posts/18426/","excerpt":"","text":"本文主要介绍 Markdown 的扩展语法，Markdown 基础语法请参考 这里本文转载自 链滴社区 ，并且在原文基础上作出了一些修改 总览在 基础语法 中我们介绍了 Markdown 最常用的排版用法，但有些时候基础语法不足以满足复杂一些的排版需求，这时候就需要使用扩展语法了。 一些个人和组织对基础语法进行了扩展，比如引入表格、围栏代码块、代码高亮、自动链接、脚注和目录等，这些扩展语法需要特定的 Markdown 引擎来支持。 可用性不是所有的 Markdown 引擎都支持扩展语法，所以在使用扩展语法之前，你可能需要对具体的 Markdown 引擎支持情况进行确认，通过浏览它们的使用文档来了解具体哪些元素可以得到支持。 主流的 Markdown 语法规范Markdown 语法规范目前尚未形成标准，如下列出的几种语法规范较为主流。 CommonMark GitHub Flavored Markdown ( GFM ) Markdown Extra MultiMarkdown R Markdown 其中 CommonMark 和 GFM 是目前最有可能进行标准化的。GFM 是 GitHub 基于 CommonMark 进行的扩展，它几乎已经是事实标准了，关于 CommonMark 规范要点解读可参考 这里。 Markdown 引擎这里 列出了很多 Markdown 引擎实现，它们中的大多数都支持通过设置开关来都支持扩展语法，具体细节请参考它们的文档。 表格使用短横线 --- 来分隔表头和表身，使用竖线 | 来分隔列，每行开头和结尾的竖线是可选的。 1234| Syntax | Description || ----------- | ----------- || Header | Title || Paragraph | Text | 渲染结果： Syntax Description Header Title Paragraph Text 每个列不一定要对齐，如下示例同样能够渲染： 1234| Syntax | Description || --- | ----------- || Header | Title || Paragraph | Text | 表格对齐如果需要左对齐、居中对齐或者右对齐表格内容，可以通过在 --- 中添加冒号 : 实现。冒号仅出现在左边表示左对齐，出现在两边表示居中对齐，仅出现在右边表示右对齐。 1234| Syntax | Description | Test Text || :--- | :----: | ---: || Header | Title | Here&#39;s this || Paragraph | Text | And more | 渲染结果： Syntax Description Test Text Header Title Here’s this Paragraph Text And more 表格内容排版表格中的内容也可以进行排版，比如加粗、强调文本，插入超链接等。但仅限于使用“行级元素”进行排版，不能使用“块级元素”，比如不能使用标题、块引用、列表、分隔线等。 表格内容转义竖线如果需要在表格内容中使用竖线 | ，那就需要对其进行转义。可以使用 \\| 转义，但更稳妥的做法是写竖线的 HTML 实体表示 &amp;#124;，因为有的 Markdown 引擎不能正确处理表格内容中的 \\|。 围栏代码块在基础语法中我们介绍过可以通过四个空格或者制表符 \\t 缩进来排版代码块。但我们更推荐的是使用围栏代码块语法，即使用大于等于三个反引号 ``` 或者大于等于三个波浪线 ~~~ 来包裹代码块内容： 1234567&#96;&#96;&#96;&#123; &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25&#125;&#96;&#96;&#96; 渲染结果： 12345&#123; &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25&#125; 如果需要展示代码块原文 Markdown（ 就像上面展示的例子那样 ），可以在最外层使用更多数量的反引号开始，闭合的反引号数量等于开始的数量即可。 123456789&#96;&#96;&#96;&#96;&#96;&#96;&#96;&#123; &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25&#125;&#96;&#96;&#96;&#96;&#96;&#96;&#96; 代码块语法高亮代码块语法高亮需要 Markdown 引擎支持，通过在开始反引号后添加编程语言名称来排版。 1234567```json&#123; &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25&#125;``` 渲染结果： 12345&#123; &quot;firstName&quot;: &quot;John&quot;, &quot;lastName&quot;: &quot;Smith&quot;, &quot;age&quot;: 25&#125; 脚注脚注用于在文末添加细节说明或者参考，这样文章的正文部分看上去会更加简洁清晰。创建脚注后，正文中引用脚注的地方会出现一个上标数字链接，读者点击后跳转到文末脚注定义的对应位置。 脚注引用通过 [^标识符] 创建，标识符部分可以是数字或者文本，但不能包含空格或者制表符。标识符仅用于关联引用和定义，在渲染时会自动根据脚注定义顺序进行数字递增渲染。不过这也不是绝对的，某些 Markdown 引擎也会将标识符部分用于渲染。 脚注定义使用 [^标识符]: 来创建，冒号后面就是需要添加的细节说明或者参考。脚注定义不一定非要放在整个 Markdown 文本的末尾，夹在段落、列表或者块引用之间也是可以工作的。 123456789101112这里是一个脚注引用[^1]，这里是另一个脚注引用[^bignote]。[^1]: 第一个脚注定义。[^bignote]: 脚注定义可使用多段内容。 缩进对齐的段落包含在这个脚注定义内。&#96;&#96;&#96; 可以使用代码块。&#96;&#96;&#96; 还有其他行级排版语法，比如**加粗**和[链接](https:&#x2F;&#x2F;blog.imsyy.top&#x2F;)。 标题指定 ID一些 Markdown 引擎支持为标题指定 ID，另一些 Markdown 引擎是自动添加 ID 的。标题 ID 的作用是允许其他地方通过锚点直接跳转到该标题。标题指定 ID 的语法是在标题后面通过花括号包裹 ID。 1### 这是一个标题 &#123;#custom-id&#125; 渲染的 HTML： 1&lt;h3 id=&quot;custom-id&quot;&gt;这是一个标题&lt;/h3&gt; 链接到指定的标题可以通过超链接语法链接到文中的标题。 Markdown HTML [标题指定 ID](#heading-ids) &lt;a href=&quot;#heading-ids&quot;&gt;标题指定 ID&lt;/a&gt; 删除线可以通过删除线划掉文本，排版结果就像这样。创建删除线可以通过一个 ~ 或两个波浪线 ~~ 包裹待删除的文本。 1~~地球是平的。~~ 现在我们知道地球是圆的了。 渲染结果：地球是平的。 现在我们知道地球是圆的了。 任务列表通过在普通列表项中添加 [ ] 或者 [x] 来渲染任务列表项。 123- [x] 待办事项一- [ ] 待办事项二- [ ] 待办事项三 渲染结果： 待办事项一 待办事项二 待办事项三 Emoji 表情有两种方法使用 Emoji 表情：直接输入 Emoji 字符或者使用别名 :smile:。直接输入的话需要确认当前编辑器使用 UTF-8 编码。 12今天天气真好 :sunny: 花儿 🌻 对我笑 渲染结果：今天天气真好 ☀️花儿 🌻 对我笑 禁止自动链接大部分 Markdown 引擎都是默认开启自动链接的，所以当我们想把一个链接渲染为纯文本时，需要把它变成代码： 1&#96;https:&#x2F;&#x2F;blog.imsyy.top&#x2F;&#96; 渲染结果：https://blog.imsyy.top/ 总结尽量仅使用 GFM 定义的扩展语法，这样能够最大限度得到众多 Markdown 引擎的支持，从而得到一致的渲染结果。","categories":[{"name":"或许有用","slug":"或许有用","permalink":"https://blog.imsyy.top/categories/%E6%88%96%E8%AE%B8%E6%9C%89%E7%94%A8/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://blog.imsyy.top/tags/Markdown/"},{"name":"使用指南","slug":"使用指南","permalink":"https://blog.imsyy.top/tags/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"}]},{"title":"Markdown 使用指南 - 基础语法","slug":"Markdown 使用指南 - 基础语法","date":"2020-12-02T08:28:34.000Z","updated":"2021-02-07T05:00:58.675Z","comments":true,"path":"posts/16325/","link":"","permalink":"https://blog.imsyy.top/posts/16325/","excerpt":"","text":"本文主要介绍 Markdown 的基础语法，Markdown 扩展语法请参考 这里本文转载自 链滴社区 ，并且在原文基础上作出了一些修改 总览几乎所有的 Markdown 引擎都支持 Markdown 发明者 John Gruber 所设计的 基本语法，但不同的 Markdown 处理引擎在细节表现方面略有不同，下面逐一介绍。 标题要创建标题的话只需使用井号 # 开头，井号的数量对应标题的级别。比如如果你想要创建一个 &lt;h3&gt; 则可以通过用三个 # 开头：### 三级标题 。使用井号的标题语法在 CommonMark 规范 中称之为 “ATX 标题” 。 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 标题可选语法除了使用 ATX 标题外，我们还可以用 Setext 标题：在文本下一行用一个或多个等号 = 表示一级标题，一个或多个短横线 - 表示二级标题。 12345一级标题=======二级标题------------ 标题最佳实践 段落之间的 ATX 标题最好使用空行分隔。因为有的 Markdown 引擎不识别缺少前后空行的标题语法。 ATX 标题的井号后 务必加上一个空格。 尽量不要使用 Setext 语法来写标题，因为 Setext 语法只能写到二级标题。 段落使用空行分隔文本即可 段落最佳实践 段落开头不要使用空格或者制表符（\\t 即 Tab 键）来缩进，否则可能会被当做代码块渲染。 中文传统排版上段落开头有着 “空两格” 的习惯，可以使用全角空格 或者 HTML 实体 &amp;emsp; 。 折行如果需要文本折行 &lt;br&gt;，可在文本结尾加上两个或更多的空格然后回车。 折行最佳实践目前大部分 Markdown 引擎会自动将换行符 \\n 转换为 &lt;br&gt; ，即软换行转硬换行。所以结尾用两个或更多空格的写法虽然稳妥，但是可能也会造成一些小问题：结尾空格在一些编辑器中并不可视；不小心按到或者习惯性按到会造成错误排版。介于这些小问题，可能用 &lt;br&gt; 来折行是最稳妥的做法，但这又不太优雅。另外，在 CommonMark 规范中可以在文本结尾使用反斜杠 \\ 来折行，但我也不太推荐这种写法。 综上，我的建议是 **不要使用结尾空格、\\ 或者 &lt;br&gt;**，因为现在几乎所有的 Markdown 引擎基本都已经支持软换行转硬换行了。 加粗和斜体加粗要加粗文本，可以使用两个星号 ** 或者两个下划线 __ 包裹待加粗的文本。 12把文本 **加粗** 一下把文本 __加粗__ 一下 把文本 加粗 一下把文本 加粗 一下 加粗最佳实践加粗用星号和用下划线的不同之处在于星号用法前后可以不加空格，但下划线必须要加。 12把文本**加粗**一下把文本__加粗__一下 把文本加粗一下把文本__加粗__一下 斜体要使文本斜体，可以使用一个星号 * 或者一个下划线 _ 包裹待斜体的文本。 12这两个字是 *斜体* 着的这两个字是 _斜体_ 着的 这两个字是 斜体 着的这两个字是 斜体 着的 强调最佳实践和加粗类似，星号用法前后可以不加空格，但下划线必须要加。 12这两个字是*斜体*着的这两个字是_斜体_着的 这两个字是斜体着的这两个字是_斜体_着的 加粗并斜体如果你需要加粗的同时使文本斜体，可以使用三个星号 *** 或者三个下划线 ___ 包裹待斜体的文本。 1同时 ***加粗并强调*** 的示例 同时 加粗并强调 的示例 块引用要创建块引用 &lt;blockquote&gt; 的话仅需在段落前加上大于号 &gt;。 123&gt; 原谅我这一生不羁放纵爱自由，也会怕有一天会跌倒&gt; 背弃了理想 ，谁人都可以&gt; 哪会怕有一天只你共我 渲染结果 原谅我这一生不羁放纵爱自由，也会怕有一天会跌倒背弃了理想 ，谁人都可以哪会怕有一天只你共我 块引用内分段如果需要分段的话需要可以在分段空行前加上一个 &gt;。 12345&gt; 今天我， 寒夜里看雪飘过&gt; 怀着冷却了的心窝漂远方&gt; &gt; 风雨里追赶， 雾里分不清影踪&gt; 天空海阔你与我 渲染结果： 今天我， 寒夜里看雪飘过怀着冷却了的心窝漂远方 风雨里追赶， 雾里分不清影踪天空海阔你与我 嵌套块引用块引用可以嵌套使用，在段落前添加两个大于号 &gt;&gt; 表示两层嵌套 123&gt; 块引用段落&gt; &gt; &gt; 嵌套的块引用段落 渲染结果： 块引用段落 嵌套的块引用段落 块引用包含其他元素块引用能够包含其他大部分语法元素。CommonMark 规范将块引用定义为容器块，容器块可以包含任意块级元素和行级元素，也就是说块引用可以包含其他任意元素。 123456&gt; ## 标题是块级元素&gt; &gt; * 列表项一是容器块元素&gt; * 列表项二也是容器块元素&gt; &gt; **加粗**和*强调*是行级元素 渲染结果： 标题是块级元素 列表项一是容器块元素 列表项二也是容器块元素 加粗 和 强调 是行级元素 列表列表分为有序列表和无序列表。Markdown 中的列表只能包含列表项元素，列表项和块引用一样，都是容器块。也就是说列表项可以包含其他任意元素 有序列表有序列表可以通过阿拉伯数字后跟 . 或者 ) 来创建，数字不必递增连续 121. 列表项一2) 列表项二 渲染结果： 列表项一 列表项二 无序列表无序列表可以通过短横线 -、星号 * 或者加号 + 来开头，后面需要跟一个空格来分隔文本内容 123- 列表项一+ 列表项二* 列表项三 渲染结果： 列表项一 列表项二 列表项三 列表项包含其他元素列表项可以包含其他任意元素，比如段落、块引用、代码块、图片等。使用要点是待包含元素的起始字符要和列表项起始内容 “对齐” 列表项包含段落12345* 列表项一* 列表项二第一段 这是第二段* 列表项三 渲染结果： 列表项一 列表项二第一段 这是第二段 列表项三 列表项包含块引用12345* 列表项一* 列表项二第一段 &gt; 第二段是块引用* 列表项三 渲染结果： 列表项一 列表项二第一段 第二段是块引用 列表项三 列表项包含图片1234* 列表项一* 列表项二第一段 ![Logo](https://cdn.jsdelivr.net/gh/syy0322/Picture/2020/09/favicon.webp)* 列表项三 渲染结果： 列表项一 列表项二第一段 列表项三 代码代码可以通过两个反引号 `` 包裹 一个 printf() 函数 转义反引号如果你需要显示反引号，可以用转义符 \\ 来对反引号进行转义 1打个反引号 \\` 渲染结果： 打个反引号 ` 代码块推荐使用围栏代码块语法来排版代码块，即使用 ``` 来包裹代码块，并且指定语法高亮语言： 123456​```html&lt;html&gt; &lt;head&gt; &lt;/head&gt;&lt;/html&gt;​``` 分隔线通过大于等于三个星号 *** 、短横线 --- 或者下划线 ___ 来创建分隔线 123***---___ 渲染结果： 超链接通过 [链接文本](URL) 来创建超链接。 1这是我的个人主页 [IMSYY](https://imsyy.top/) 渲染结果： 这是我的个人主页 IMSYY 添加超链接标题链接标题是可选的，在圆括号中的 URL 后用双引号包裹。鼠标移到超链接上会浮出显示标题内容。 1这是我的个人主页 [IMSYY](https://imsyy.top/ &quot;我的主页&quot;) 渲染结果： 这是我的个人主页 IMSYY URL 和邮件地址如果要直接显示 URL 或者邮件地址，可以通过 &lt; 和 &gt; 来包裹 URL 或者邮件地址。 12&lt;https://blog.imsyy.top&gt;&lt;one@imsyy.top&gt; 大部分 Markdown 引擎也支持自动转换，这样可以省去 &lt;&gt; 12https://blog.imsyy.topone@imsyy.top 渲染结果： https://blog.imsyy.top&#x6f;&#110;&#x65;&#64;&#x69;&#x6d;&#x73;&#121;&#121;&#x2e;&#x74;&#x6f;&#x70; 超链接格式排版超链接可以和加粗强调、代码等元素结构一同使用。 12这是我的个人主页 **[IMSYY](https://imsyy.top)**欢迎来到我的博客 **[`無名小栈`](https://blog.imsyy.top)** 渲染结果：这是我的个人主页 IMSYY欢迎来到我的博客 無名小栈 引用风格的超链接使用引用风格的超链接可以让 Markdown 原文更容易阅读。引用风格的超链接分为两部分：链接引用和链接定义。 链接引用链接引用用于在需要插入超链接的地方，它由两组方括号构成，第一组方括号用于指定链接文本，第二组方括号用于指定链接标识，链接标识指向链接定义。 123[我的主页][链接][链接]: https://imsyy.top 渲染结果： 我的主页 链接引用也可以只由一组方括号构成，这种情况下链接标识将用于链接文本。 123[我的主页][链接]: https://b3log.org 渲染结果： 我的主页 链接定义链接定义由三部分构成： 方括号包裹定义链接标识，后跟冒号 : URL，可以直接写也可以用尖括号 &lt; &gt; 包裹 链接标题，这部分是可选的，可以用双引号、单引号或者圆括号包裹 12345[我的主页]: https://imsyy.top[链接标识]: &lt;https://imsyy.top&gt;[链接标识]: https://imsyy.top &quot;我的主页&quot;[链接标识]: https://imsyy.top &#x27;我的主页&#x27;[链接标识]: https://imsyy.top (我的主页) 链接定义可以放在整个 Markdown 文本的任何位置。有的人习惯将其放于引用所在段落之后，有的人习惯将其放于文末位置 超链接最佳实践英文内容天然使用空格分隔，所以在使用自动超链接时不存在分隔问题。但中文会存在该问题，比如： 1欢迎来到我的博客https://blog.imsyy.top 这段内容在很多 Markdown 引擎上会渲染不正确。为了尽量保证兼容性，可以考虑使用空格进行分隔： 1欢迎来到我的博客 https://blog.imsyy.top 或者使用尖括号 &lt;&gt; 包裹： 1欢迎来到我的博客&lt;https://blog.imsyy.top&gt; 这样就能得到预期的渲染结果了： 欢迎来到我的博客 https://blog.imsyy.top 图片使用感叹号 ! 后跟超链接就可以渲染图片了。 1![Logo](https://cdn.jsdelivr.net/gh/syy0322/Picture/2020/09/favicon.webp) 渲染结果： 超链接嵌套图片如果你需要图片点击可以跳转超链接，只需要在链接文本部分包含图片即可。 1[![Logo](https://cdn.jsdelivr.net/gh/syy0322/Picture/2020/09/favicon.webp)](https://imsyy.top) 转义字符可使用反斜杠 \\ 来转义如下字符： 字符 中文名称 \\ 反斜杠 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 圆括号 # 井号 + 加号 - 短横线（减号） . 点 ! 感叹号 几乎所有 ASCII 标点符号都可以使用反斜杠进行转义 嵌入 HTMLMarkdown 天然支持嵌入 HTML 代码。 1**Markdown** 和 &lt;em&gt;HTML&lt;/em&gt; 混合排版 渲染结果： Markdown 和 HTML 混合排版 嵌入 HTML 最佳实践这在需要设置图片大小、字体颜色时会比较有用，但我们并不建议过多使用 HTML 来进行排版，一来是因为这样做实际上并不通用，因为有的 Markdown 引擎因为安全原因会过滤部分标签或者属性；二来是因为这样做太不 Markdown 了！ 另外，请勿在 HTML 中嵌入 Markdown，这样并不工作： 1&lt;p&gt;**粗体**不会生效&lt;/p&gt; 总结使用好空行和空格是 Markdown 排版的关键，很多时候就是因为少了个空行或者空格导致产生了非预期的渲染结果。 随着 CommonMark / GFM 规范日趋完善并逐渐成为业界统一的 Markdown 标准，已经有越来越多的 Markdown 引擎实现了该规范。建议 Markdown 使用者尽量该遵循规范来进行排版，这样才能最大程度地避免细节渲染问题。","categories":[{"name":"或许有用","slug":"或许有用","permalink":"https://blog.imsyy.top/categories/%E6%88%96%E8%AE%B8%E6%9C%89%E7%94%A8/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://blog.imsyy.top/tags/Markdown/"},{"name":"使用指南","slug":"使用指南","permalink":"https://blog.imsyy.top/tags/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"}]},{"title":"在 Hexo 中使用 ECharts 动态图表","slug":"在 Hexo 中使用 ECharts 动态图表","date":"2020-10-08T14:34:21.000Z","updated":"2021-02-07T05:16:15.133Z","comments":true,"path":"posts/23636/","link":"","permalink":"https://blog.imsyy.top/posts/23636/","excerpt":"","text":"这是什么ECharts 介绍ECharts 是一个纯 JavaScript 图表库，底层依赖于轻量级的 Canvas 类库 ZRender，基于 BSD 开源协议，是一款非常优秀的可视化前端框架。 简单使用 安装 hexo-tag-echarts 插件1npm install hexo-tag-echarts --save 添加js文件添加到 &lt;/head&gt; 标签前，通常是主题文件夹中名为 head.ejs 的文件 12&lt;script src=&quot;https://cdn.jsdelivr.net/npm/echarts@4.9.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt; 在 Markdown 文件中输入123&#123;% echarts 400 &#x27;85%&#x27; %&#125;//在此处输入 ECharts 代码&#123;% endecharts %&#125; 参数400指定图表展示的高度为400px，85%则指定图表展示的宽度为85%，如不写明这两项参数则默认值为高度400px，宽度81% 官网链接EChartshttps://echarts.apache.org/zh/ 折线图 Line基本折线图 折线图堆叠 雨量流量关系图 函数绘图 柱状图 Bar堆叠柱状图 动态柱状图 饼图 Pie基础饼图 南丁格尔玫瑰图 散点图 Scatter基础散点图 单轴散点图 K 线图 Candlestick基础 K 线图 雷达图 Radar基础雷达图 自定义雷达图 漏斗图 Funnel基础漏斗图 高级漏斗图 仪表盘 Gauge动态仪表盘 多标题仪表盘 富文本 Rich Text 更多图表 More charts篇幅所限，若想了解更多图表，可前往我的站点或官网查看更多实例 ECharts 图表https://all.imsyy.top/lab/chart/ Examples - EChartshttps://echarts.apache.org/examples/zh/","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"动态图表","slug":"动态图表","permalink":"https://blog.imsyy.top/tags/%E5%8A%A8%E6%80%81%E5%9B%BE%E8%A1%A8/"},{"name":"ECharts","slug":"ECharts","permalink":"https://blog.imsyy.top/tags/ECharts/"}]},{"title":"杂项功能测试","slug":"杂项功能测试","date":"2020-09-22T06:01:19.000Z","updated":"2021-02-25T01:44:03.487Z","comments":true,"path":"posts/4131/","link":"","permalink":"https://blog.imsyy.top/posts/4131/","excerpt":"","text":"随机 API一言 Hitokoto“ 稍等” 今日诗词『 稍等』 更新 音乐测试APlayer and Meting 网易云音乐外链网易云音乐外链将以系统最大音量播放！请注意音量 倒计时 function getRTime(){ var EndTime = new Date('2021/02/12 00:00:00'); //截止时间 var NowTime = new Date(); //累计时间 var t = EndTime.getTime() - NowTime.getTime(); //累减 // var d=Math.floor(t/1000/60/60/24); // t-=d*(1000*60*60*24); // var h=Math.floor(t/1000/60/60); // t-=h*60*60*1000; // var m=Math.floor(t/1000/60); // t-=m*60*1000; // var s=Math.floor(t/1000); //累加 var d=Math.floor(t/1000/60/60/24); var h=Math.floor(t/1000/60/60%24); var m=Math.floor(t/1000/60%60); var s=Math.floor(t/1000%60); document.getElementById(\"t_d\").innerHTML = \" \" + d + \" \"; document.getElementById(\"t_h\").innerHTML = \" \" + h + \" \"; document.getElementById(\"t_m\").innerHTML = \" \" + m + \" \"; document.getElementById(\"t_s\").innerHTML = \" \" + s + \" \"; } setInterval(getRTime,1000); 距离2021年春节还有 ∞ 天 ∞ 时 ∞ 分 ∞ 秒 var date = new Date(); document.write(\"今天是 \" + date.getFullYear() + \"年\" + (date.getMonth() + 1) + \"月\" + date.getDate() + \"日\" + \" 星期\" + \"日一二三四五六\".charAt(date.getDay()));","categories":[{"name":"无类可分","slug":"无类可分","permalink":"https://blog.imsyy.top/categories/%E6%97%A0%E7%B1%BB%E5%8F%AF%E5%88%86/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://blog.imsyy.top/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"Unlock Music 在线解密会员加密格式音乐","slug":"Unlock Music 在线解密会员加密格式音乐","date":"2020-06-21T13:44:02.000Z","updated":"2021-02-23T08:15:08.931Z","comments":true,"path":"posts/48617/","link":"","permalink":"https://blog.imsyy.top/posts/48617/","excerpt":"","text":"说明：通常情况下，现在的音乐客户端VIP会员到期后会自动删除已下载的VIP音乐文件，而且也文件是加密格式的，只能用客户端播放，会员到期后就算保留音乐文件也无法使用，而且加密格式无法在其他设备上播放，用起来限制很大，该程序则可以部署在远程服务上或者本地离线使用，解密速度非常快，任务完成后还可以在线播放和批量下载 程序信息程序界面 支持格式 QQ音乐 ( .qmc0 / .qmc2 / .qmc3 / .qmcflac / .qmcogg / .tkm ) * 支持写入封面图片 Moo音乐格式 ( .bkcmp3 / .bkcflac ) QQ音乐Tm格式 ( .tm0 / .tm2 / .tm3 / .tm6 ) QQ音乐新格式 ( .mflac / .mgg ) * 实验性支持 网易云音乐格式 ( .ncm ) * 支持补全 ncm 的 ID3 / FlacMeta 信息 虾米音乐格式 ( .xm ) * 测试阶段，且虾米音乐已停止服务 酷我音乐格式 ( .kwm ) *测试阶段 酷狗音乐格式 ( .kgm ) * 此版本暂不支持 项目地址GitHubhttps://github.com/ix64/unlock-music/ 直接使用若大家不便搭建的话，这里给出本站已搭建的地址，可直接使用 音乐解锁https://all.imsyy.top/tool/unlock-music/ ㅤㅤㅤ 安装使用宝塔面板搭建建议使用服务器进行搭建，若采用本地运行方式，在程序处理大量歌曲时，会占用较多内存，可能会造成浏览器崩溃、计算机卡顿等后果 下面，我们开始在服务器端搭建 安装 node.js安装过程不再赘述，详情可参考 菜鸟教程 检查你的 node.js 是否集成了 npm检查过程同样不再赘述，详情可参考 菜鸟教程 获取项目源代码下载文件名为 Source code 的压缩包 到 GitHub 下载 解压该压缩包 cd 到已解压的目录下 执行 npm install 安装相关依赖 执行 npm run build 进行构建 构建成功如图所示，会输出一个 dist 目录 宝塔面板设置 dist 目录为网站目录即可 服务器搭建如果服务器上已经装有 Nginx 、Apache 或 Caddy 等 Web 服务的，可以直接将作者已经编译好的文件，下载并解压到网站根目录就可以直接使用了 下载最新 modern 版压缩包1curl -O -L https://github.com/ix64/unlock-music/releases/download/`curl -s https://api.github.com/repos/ix64/unlock-music/releases|grep -w tag_name|head -n 1|cut -d&#x27;&quot;&#x27; -f4`/modern.tar.gz 解压并删除压缩包1tar zxvf modern.tar.gz &amp;&amp; rm -rf $_ 进入已解压目录1cd dist 运行程序，端口 4567 ，可自行修改1nohup python -m SimpleHTTPServer 4567&amp; 然后访问 ip:4567 即可，打不开的话就检查下防火墙 本地使用本地使用基于 Windows 系统，并且不推荐本地使用 本地运行可直接下载构建完成的 legacy 文件 下载 legacy.tar.gz 压缩包 到GitHub下载 将压缩包解压 运行文件夹里面的 index.html 文件即可 本地运行也可进行构建，操作步骤与服务器搭建一致ㅤㅤㅤ 有趣用法该工具支持补全 ncm 文件的 ID3 信息，那么就方便我们配合网易云音乐自带的云盘一起使用。 首先将下载的 VIP 音乐文件通过上述方法解密，然后再将已经解密的音乐文件上传到网易云的我的音乐云盘。 上传成功后，网易云音乐会自动根据文件 ID3 信息进行匹配，该上传文件会永久有效，此后不管你还是不是 VIP 会员或者该歌曲有没有下架，你都可以完整的播放该 VIP 歌曲和无损格式歌曲，也就是会直接从你的网盘调用，只是 PC/手机端 歌曲信息会包含 来自音乐云盘 的字样 😜","categories":[{"name":"或许有用","slug":"或许有用","permalink":"https://blog.imsyy.top/categories/%E6%88%96%E8%AE%B8%E6%9C%89%E7%94%A8/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://blog.imsyy.top/tags/%E9%9F%B3%E4%B9%90/"},{"name":"工具","slug":"工具","permalink":"https://blog.imsyy.top/tags/%E5%B7%A5%E5%85%B7/"},{"name":"Unlock Music","slug":"Unlock-Music","permalink":"https://blog.imsyy.top/tags/Unlock-Music/"}]},{"title":"Linux 系统安装宝塔面板","slug":"Linux 系统安装宝塔面板","date":"2019-10-06T01:13:25.000Z","updated":"2021-01-30T14:45:19.720Z","comments":true,"path":"posts/34964/","link":"","permalink":"https://blog.imsyy.top/posts/34964/","excerpt":"","text":"宝塔面板是一款服务器管理软件，支持 Windows 和 Linux 系统，可以通过 Web 端轻松管理服务器，提升运维效率。例如：创建管理网站、FTP、数据库，拥有可视化文件管理器，可视化软件管理器，可视化 CPU、内存、流量监控图表，计划任务等功能 安装之前安装要求 内存要求：512M以上 内存，推荐768M以上（ 宝塔面板约占服务器60M内存 ） 硬盘要求：100M以上 可用硬盘空间，推荐1GB以上（ 宝塔面板约占服务器20M硬盘空间 ） 系统要求：CentOS 7.1+ / Ubuntu16.04+ / Debian9.0+ / Fedora / Deepin 架构要求：x86_64（ 主流服务器均是此架构 ），ARM 不完整兼容（ 面板环境安装慢，部分软件可能安装不上 ） 特殊说明：请确认没有安装过Apache / Nginx / php / MySQL（ 已有任一环境则不可安装 ） 系统兼容性宝塔 Linux 面板 7.5.1 版本是基于 Centos / Debian / Ubuntu 开发的，为了最好的兼容性，请使用以上系统 Centos 官方已宣布在 2020 年停止对 Centos6 的维护更新，各大软件开发商也逐渐停止对 Centos6 的兼容，新服务器不建议使用 Centos6 Centos 7.x &gt; Debian10 &gt; Ubuntu 20.04 &gt; Cenots 8.x &gt; Ubuntu 18.04 &gt; 其它系统 开放端口 腾讯云主机：开放 5880 端口 阿里云ECS：开放 8888 端口 华为云/云耀云：开放 8888 端口 百度云BCC：开放 8888 端口 连接服务器安装面板时需要使用 SSH 来连接你的服务器，用于执行指令，推荐使用 FinalShell，也可使用 堡塔远程工具 连接时需要用到你服务器的 公网 IP 及用户名/密码，可能还需要开放对应远程控制端口 开始安装挂载磁盘这一步骤不是必须，但如果出现以下问题，则可能需要挂载磁盘 安装完宝塔面板后发现磁盘容量与实际购买容量不符 重启服务器后宝塔面板无法访问，网站、数据库文件丢失 挂载程序说明 默认将数据盘挂载到 /www 目录 若磁盘已分区，且并未挂载，工具会自动将分区挂载到 /www 若磁盘是新磁盘，将会自动分区并格式化为 xfs/ext4 文件系统 Centos 系统1yum install wget -y &amp;&amp; wget -O auto_disk.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;tools&#x2F;auto_disk.sh &amp;&amp; bash auto_disk.sh Ubuntu 系统1wget -O auto_disk.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;tools&#x2F;auto_disk.sh &amp;&amp; sudo bash auto_disk.sh Debian / Fedora 系统1wget -O auto_disk.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;tools&#x2F;auto_disk.sh &amp;&amp; bash auto_disk.sh 宝塔面板分系统安装Centos 系统1yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;123.129.198.197&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh Ubuntu / Deepin 系统1wget -O install.sh http:&#x2F;&#x2F;123.129.198.197&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh Debian 系统1wget -O install.sh http:&#x2F;&#x2F;123.129.198.197&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; bash install.sh Fedora 系统1wget -O install.sh http:&#x2F;&#x2F;123.129.198.197&#x2F;install&#x2F;install_6.0.sh &amp;&amp; bash install.sh 宝塔备用安装节点若主节点连接缓慢，请使用备用节点，备用节点仅支持 Centos 系统 备用节点 - 江苏1yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;180.101.160.68:5880&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh 备用节点 - 香港1yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;103.224.251.67:5880&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh 备用节点 - 美国1yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;128.1.164.196:5880&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh 图片详解 若下图红框中出现错误提示，请检查你的服务器端口是否开放正确若跟上图一致，则安装正确 安装完成后，请记住下图中的内容，这是登录宝塔面板的地址及账号若无法打开网址，请检查你的服务器端口是否开放正确 若成功进入下面这个页面，则安装成功出现所示页面，则安装成功 其他事项宝塔面板升级指令 Centos6 请勿执行此升级命令 升级过程耗时较长且可能会受网络波动导致升级失败 若升级后无法正常启动面板，请重新执行升级命令 升级有一定的风险，生产环境请谨慎升级 1curl http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;update6.sh|bash 宝塔面板 Python 3.7 环境版试验性版本，可能存在少量兼容性问题，正不断优化中 仅支持 Centos / Ubuntu / Debian 系统 1curl -sSO http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_panel.sh &amp;&amp; bash install_panel.sh 关于端口如需完整使用宝塔面板的所有功能，你还需要放行以下端口 如果你在宝塔面板修改了进入网站的端口，也要在服务器安全组修改过来 20 、21、 39000-40000 端口 22 端口 ( SSH连接 ) 80、443 端口（ 网站及SSL ） 3306 端口（ 数据库远程连接 ) 888 端口（ phpmyadmin ）","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.imsyy.top/tags/Linux/"},{"name":"宝塔面板","slug":"宝塔面板","permalink":"https://blog.imsyy.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"}]},{"title":"为你的网站添加复制提示","slug":"为你的网站添加复制提示","date":"2019-08-27T07:37:35.000Z","updated":"2021-01-30T13:24:06.598Z","comments":true,"path":"posts/26859/","link":"","permalink":"https://blog.imsyy.top/posts/26859/","excerpt":"","text":"只在复制时显示提示，并不会弹窗，这样用户体验会更好 我们首先需要引入 layer 资源文件123456&lt;script src=&quot;https://lib.baomitu.com/layer/3.1.1/layer.js&quot;&gt;&lt;/script&gt;&lt;script&gt; document.body.oncopy = function()&#123; layer.msg(&#x27;这里输入你需要显示的内容&#x27;); &#125;;&lt;/script&gt; 复制上面的代码后输入需要显示的内容 粘贴至 &lt;body&gt; 和 &lt;/body&gt; 标签内 放在 &lt;head&gt; 标签内无效 最终效果可以参考本站","categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://blog.imsyy.top/tags/%E6%95%99%E7%A8%8B/"},{"name":"layer","slug":"layer","permalink":"https://blog.imsyy.top/tags/layer/"}]},{"title":"Hello World","slug":"Hello World","date":"2019-06-13T12:46:25.000Z","updated":"2021-01-30T12:55:23.665Z","comments":true,"path":"posts/16107/","link":"","permalink":"https://blog.imsyy.top/posts/16107/","excerpt":"","text":"这是 Hexo 默认生成的第一篇文章。我对其中的内容做了些许修改，增加了一些常用命令，或许还能帮助一些刚使用 Hexo 的新手。 快速开始初始化 Hexo1npm install -g hexo-cli 安装到指定文件夹123hexo init &lt;文件夹路径&gt; # 输入时不要带 &lt; &gt;cd &lt;文件夹路径&gt; # 输入时不要带 &lt; &gt;npm install 生成静态文件1hexo generate 本地运行1hexo server 升级 Hexo12345678910hexo version # 查看当前版本cnpm install -g cnpm # 升级 npmcnpm cache clean -f # 清除 npm 缓存cd &lt;博客安装目录&gt; # 输入时不要带 &lt; &gt;cnpm install -g npm-check # 检查可升级的插件cnpm install -g npm-upgrade # 升级系统中的插件npm-checknpm-upgradecnpm update # 更新 Hexo 及所有插件hexo version # 查看升级是否成功 常用命令创建新文章123hexo new &quot;Post name&quot; # 标题包含空格，需使用引号括起来# 或hexo n &quot;Post name&quot; # 标题包含空格，需使用引号括起来 创建新页面1hexo new page &quot;page name&quot; # 标题包含空格，需使用引号括起来 创建新草稿1hexo new draft &quot;page name&quot; # 草稿文件存放在 /source/_drafts 路径下 草稿转为正式文章1hexo publish &quot;page name&quot; # 该命令会把 /source/_drafts 下的文章移到 /source/_posts 下 生成静态页面123hexo generate# 或hexo g 监视文件变动1hexo generate --watch 清除1hexo clean 运行服务器Hexo 自动监视文件变动并自动更新123hexo server# 或hexo s 静态模式，Hexo 不会监视文件变动1hexo server -s 简洁模式，隐藏终端信息1hexo --silent 更改运行端口1hexo server -p 5000 自定义运行 IP1hexo server -i 192.168.1.1 部署123hexo deploy# 或hexo d # 若安装了 hexo douban 插件，则不能使用该简化命令 一键三连本地预览1hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server 部署到服务器1hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy","categories":[{"name":"随便说说","slug":"随便说说","permalink":"https://blog.imsyy.top/categories/%E9%9A%8F%E4%BE%BF%E8%AF%B4%E8%AF%B4/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.imsyy.top/tags/Hexo/"}]}],"categories":[{"name":"一些教程","slug":"一些教程","permalink":"https://blog.imsyy.top/categories/%E4%B8%80%E4%BA%9B%E6%95%99%E7%A8%8B/"},{"name":"或许有用","slug":"或许有用","permalink":"https://blog.imsyy.top/categories/%E6%88%96%E8%AE%B8%E6%9C%89%E7%94%A8/"},{"name":"无类可分","slug":"无类可分","permalink":"https://blog.imsyy.top/categories/%E6%97%A0%E7%B1%BB%E5%8F%AF%E5%88%86/"},{"name":"随便说说","slug":"随便说说","permalink":"https://blog.imsyy.top/categories/%E9%9A%8F%E4%BE%BF%E8%AF%B4%E8%AF%B4/"}],"tags":[{"name":"网盘","slug":"网盘","permalink":"https://blog.imsyy.top/tags/%E7%BD%91%E7%9B%98/"},{"name":"OneDrive","slug":"OneDrive","permalink":"https://blog.imsyy.top/tags/OneDrive/"},{"name":"OneManager","slug":"OneManager","permalink":"https://blog.imsyy.top/tags/OneManager/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://blog.imsyy.top/tags/Cloudflare/"},{"name":"Heroku","slug":"Heroku","permalink":"https://blog.imsyy.top/tags/Heroku/"},{"name":"教程","slug":"教程","permalink":"https://blog.imsyy.top/tags/%E6%95%99%E7%A8%8B/"},{"name":"Git","slug":"Git","permalink":"https://blog.imsyy.top/tags/Git/"},{"name":"Github","slug":"Github","permalink":"https://blog.imsyy.top/tags/Github/"},{"name":"Gitee","slug":"Gitee","permalink":"https://blog.imsyy.top/tags/Gitee/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blog.imsyy.top/tags/Markdown/"},{"name":"使用指南","slug":"使用指南","permalink":"https://blog.imsyy.top/tags/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"},{"name":"动态图表","slug":"动态图表","permalink":"https://blog.imsyy.top/tags/%E5%8A%A8%E6%80%81%E5%9B%BE%E8%A1%A8/"},{"name":"ECharts","slug":"ECharts","permalink":"https://blog.imsyy.top/tags/ECharts/"},{"name":"测试","slug":"测试","permalink":"https://blog.imsyy.top/tags/%E6%B5%8B%E8%AF%95/"},{"name":"音乐","slug":"音乐","permalink":"https://blog.imsyy.top/tags/%E9%9F%B3%E4%B9%90/"},{"name":"工具","slug":"工具","permalink":"https://blog.imsyy.top/tags/%E5%B7%A5%E5%85%B7/"},{"name":"Unlock Music","slug":"Unlock-Music","permalink":"https://blog.imsyy.top/tags/Unlock-Music/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.imsyy.top/tags/Linux/"},{"name":"宝塔面板","slug":"宝塔面板","permalink":"https://blog.imsyy.top/tags/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"},{"name":"layer","slug":"layer","permalink":"https://blog.imsyy.top/tags/layer/"},{"name":"Hexo","slug":"Hexo","permalink":"https://blog.imsyy.top/tags/Hexo/"}]}